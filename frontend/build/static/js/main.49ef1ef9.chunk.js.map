{"version":3,"sources":["app/Home.js","app/Projects.js","features/converter/converterSlice.js","features/converter/ConverterPage.js","features/borderPreview/borderPreviewSlice.js","features/borderPreview/BorderPreview.js","helpers/runOperations.js","features/calculator/calculatorSlice.js","features/calculator/DisplayField.js","features/calculator/CalculatorButton.js","features/calculator/CalculatorPage.js","app/NotFound.js","app/Navbar.js","App.js","api/server.js","app/store.js","index.js"],"names":["Home","props","className","ListItem","path","text","to","Projects","converterSlice","createSlice","name","initialState","binValue","decValue","reducers","updateBinValue","state","action","payload","updateDecValue","actions","selectBinValue","converter","selectDecValue","ConverterPage","dispatch","useDispatch","useSelector","maxLength","length","caluclateDecimalvalue","pos","parseFloat","Math","pow","onSubmit","e","preventDefault","result","i","charAt","getAnswer","autoFocus","type","value","onChange","target","inputType","nativeEvent","num","alert","readOnly","onClick","borderPreviewSlice","borderTopLeftRadius","str","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","updateRadius","FormInput","label","inputChange","handleOnChange","StylePreview","styles","renderCSSFormat","style","BorderPreview","borderPreview","handleInputChange","substring","formattedStyles","renderBorderBox","runOperations","operator","a","b","num1","num2","p","indexOf","getUlps","convertToInt","toFixed","add","subtract","multiply","divide","countZeros","removeZeros","removeTrailingZero","places","padding","calculatorSlice","queuedOperation","lastAction","activeId","firstValue","secondValue","displayValue","updateQueuedOperation","updateLastAction","updateActiveId","updateFirstValue","updateSecondValue","updateDisplayValue","resetAll","DisplayField","CalculatorButton","wrapperClass","id","disabled","onClickHandler","CalculatorPage","actionsList","calculator","disableNumbers","btn","classList","handleNumberClick","handleSignClick","handleAllClearClick","handleClearClick","handleDecimalClick","handleEqualsClick","handleOperatorClick","number","nextValue","includes","handleActiveId","sign","document","getElementById","remove","colSpan","isActive","NotFound","Navbar","App","seedDate","exact","component","store","configureStore","reducer","converterReducer","borderPreviewReducer","calculatorReducer","ARTIFICIAL_DELAY_MS","rng","seedrandom","randomSeedString","localStorage","getItem","getRandomInt","min","max","ceil","floor","Date","toISOString","setItem","setRandom","faker","seed","getTime","user","randomFromArray","array","db","factory","primaryKey","nanoid","firstName","String","lastName","username","posts","manyOf","post","title","date","content","reactions","oneOf","comments","comment","reaction","thumbsUp","Number","hooray","heart","rocket","eyes","createUserData","internet","userName","author","create","j","newPost","lorem","words","recent","paragraphs","serializePost","handlers","rest","get","req","res","ctx","getAll","map","delay","json","data","body","status","findFirst","where","equals","params","postId","patch","updatedPost","update","notifications","generateRandomNotifications","undefined","worker","setupWorker","socketServer","MockSocketServer","sendRandomNotifications","socket","since","obj","send","JSON","stringify","sendMessage","on","message","parse","notificationTemplates","numNotifications","pastDate","now","parseISO","valueOf","setMinutes","getMinutes","Array","template","between","start","onUnhandledRequest","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.49ef1ef9.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\nimport './style.css'\n\nexport const Home = (props) => {\n  return (\n    <div className=\"page-container home\">\n\t\t\t<section>\n\t\t\t<header>\n\t\t\t\t<h1>Mathew Gries DOTCOM</h1>\n\t\t\t</header>\n\t\t\t</section>\n\t\t\t<section>\n\t\t\t\t<div className=\"welcome-paragraph\"> \n\t\t\t\t\t<p>Welcome to mathewgries.com. This site was built to showcase various projects and for learning web design.\n\t\t\t\t\t\tThis page is still in the early stages of layout design, so it might look a bit rough around the edges at\n\t\t\t\t\t\tthe moment.\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t</section>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst ListItem = (props) => {\n  const { path, text } = props\n  return (\n    <div className='project-list-item-container'>\n      <Link to={`/${path}`} className=\"project-list-item\">\n        {text}\n      </Link>\n    </div>\n  )\n}\n\nexport const Projects = (props) => {\n  return (\n    <div className=\"page-container projects\">\n\t\t\t<header>\n\t\t\t\t<h1>Projects</h1>\n\t\t\t</header>\n      <div className=\"project-list\">\n        <ListItem path={'bin2dec'} text={'Binary to Decimal'} />\n        <ListItem path={'border-preview'} text={'Border Preview'} />\n        <ListItem path={'calculator'} text={'Calculator'} />\n      </div>\n    </div>\n  )\n}\n","import { createSlice } from '@reduxjs/toolkit'\n\nconst converterSlice = createSlice({\n  name: 'converter',\n  initialState: {\n    binValue: '',\n    decValue: 0,\n  },\n  reducers: {\n    updateBinValue(state, action) {\n      state.binValue = action.payload\n    },\n    updateDecValue(state, action) {\n      state.decValue = action.payload\n    },\n  },\n})\n\nexport const { updateBinValue, updateDecValue } = converterSlice.actions\n\nexport default converterSlice.reducer\n\nexport const selectBinValue = (state) => state.converter.binValue\nexport const selectDecValue = (state) => state.converter.decValue\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {\n  updateBinValue,\n  updateDecValue,\n  selectBinValue,\n  selectDecValue,\n} from './converterSlice'\nimport './style.css'\n\nexport const ConverterPage = () => {\n  const dispatch = useDispatch()\n  const binValue = useSelector(selectBinValue)\n  const decValue = useSelector(selectDecValue)\n\n  let maxLength = binValue.length === 8\n\n  const handleInputUpdate = (e) => {\n    const { value } = e.target\n    const { inputType } = e.nativeEvent\n\n    if (!maxLength || inputType === 'deleteContentBackward') {\n      for (let i = 0; i < value.length; i++) {\n        const num = value.charAt(i)\n        if (num !== '0' && num !== '1') {\n          alert('Enter 1 or 0')\n          return\n        }\n      }\n      dispatch(updateBinValue(value))\n    }\n  }\n\n  const caluclateDecimalvalue = (binValue, pos) => {\n    const bin = parseFloat(binValue)\n    return bin * Math.pow(2, pos)\n  }\n\n  const getAnswer = (binValue) => {\n    let result = 0\n    for (let i = 0; i < binValue.length; i++) {\n      const pos = binValue.length - i - 1\n      result += caluclateDecimalvalue(binValue.charAt(i), pos)\n    }\n    dispatch(updateDecValue(result))\n  }\n\n  const clearFields = (e) => {\n    e.preventDefault()\n    dispatch(updateBinValue(''))\n    dispatch(updateDecValue(0))\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    getAnswer(binValue)\n  }\n\n  return (\n    <section className=\"page-container converter\">\n      <header>\n        <h1>Convert Binary To Decimal</h1>\n      </header>\n      <div className=\"form-container\">\n        <form onSubmit={handleSubmit}>\n          <div>\n            <input\n              autoFocus={true}\n              type=\"text\"\n              value={binValue}\n              onChange={handleInputUpdate}\n            />\n          </div>\n          <div>\n            <input type=\"text\" value={decValue} readOnly />\n          </div>\n          <button type=\"submit\">Convert</button>\n          <button type=\"input\" onClick={clearFields}>\n            Clear\n          </button>\n        </form>\n      </div>\n    </section>\n  )\n}\n","import { createSlice } from '@reduxjs/toolkit'\n\nconst initialState = {\n  borderTopLeftRadius: {\n    value: '0',\n    str: 'border-top-left-radius',\n  },\n  borderTopRightRadius: {\n    value: '0',\n    str: 'border-top-right-radius',\n  },\n  borderBottomLeftRadius: {\n    value: '0',\n    str: 'border-bottom-left-radius',\n  },\n  borderBottomRightRadius: {\n    value: '0',\n    str: 'border-bottom-right-radius',\n  },\n}\n\nconst borderPreviewSlice = createSlice({\n  name: 'borderPreview',\n  initialState,\n  reducers: {\n    updateRadius(state, action) {\n      state[action.payload.name].value = action.payload.value\n    },\n  },\n})\n\nexport const { updateRadius } = borderPreviewSlice.actions\n\nexport default borderPreviewSlice.reducer\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { updateRadius } from './borderPreviewSlice'\nimport './style.css'\n\nconst FormInput = (props) => {\n  const { label, text, name, value, inputChange } = props\n\n  const handleOnChange = ({ target }) => {\n    inputChange(target)\n  }\n\n  return (\n    <section className=\"input-group\">\n      <label>{label}</label>\n      <div>\n        <input\n          type={text}\n          name={name}\n          value={value}\n          onChange={(e) => handleOnChange(e)}\n        />\n        <span>%</span>\n      </div>\n    </section>\n  )\n}\n\nconst StylePreview = ({ styles }) => {\n  let renderCSSFormat = 'style {\\n'\n  for (let style in styles) {\n    renderCSSFormat += `\\t${styles[style].str}: ${styles[style].value}%;\\n`\n  }\n  renderCSSFormat += '}'\n\n  return (\n    <div>\n      <pre>{renderCSSFormat}</pre>\n    </div>\n  )\n}\n\nexport const BorderPreview = () => {\n  const dispatch = useDispatch()\n  const styles = useSelector((state) => state.borderPreview)\n\n  const handleInputChange = ({ name, value }) => {\n    if (value.length > 1 && value.charAt(0) === '0') {\n      value = value.substring(1)\n    }\n\n    if (value === '') {\n      value = '0'\n    }\n\n    dispatch(updateRadius({ name, value }))\n  }\n\n  const renderBorderBox = () => {\n    const formattedStyles = {}\n\n    for (let style in styles) {\n      formattedStyles[style] = styles[style].value + '%'\n    }\n\n    return (\n      <div style={formattedStyles} className=\"border-box\">\n        <div className=\"style-preview\">\n          <StylePreview styles={styles} />\n        </div>\n      </div>\n    )\n  }\n\n  const renderForm = () => {\n    return (\n      <section className=\"form-container\">\n        <form>\n          <div>\n            <FormInput\n              label={'Top-Left'}\n              type={'text'}\n              name={'borderTopLeftRadius'}\n              value={styles.borderTopLeftRadius.value}\n              inputChange={handleInputChange}\n            />\n          </div>\n          <div>\n            <FormInput\n              label={'Top-Right'}\n              type={'text'}\n              name={'borderTopRightRadius'}\n              value={styles.borderTopRightRadius.value}\n              inputChange={handleInputChange}\n            />\n          </div>\n          <div>\n            <FormInput\n              label={'Bottom-Left'}\n              type={'text'}\n              name={'borderBottomLeftRadius'}\n              value={styles.borderBottomLeftRadius.value}\n              inputChange={handleInputChange}\n            />\n          </div>\n          <div>\n            <FormInput\n              label={'Bottom-Right'}\n              type={'text'}\n              name={'borderBottomRightRadius'}\n              value={styles.borderBottomRightRadius.value}\n              inputChange={handleInputChange}\n            />\n          </div>\n        </form>\n      </section>\n    )\n  }\n\n  return (\n    <section className=\"page-container border-preview\">\n      <header>\n        <h1>Border Preview</h1>\n      </header>\n      <div className='page-content'>\n        {renderBorderBox()}\n        {renderForm()}\n      </div>\n    </section>\n  )\n}\n","export default function runOperations(operator, a, b) {\n  let result\n\n  switch (operator) {\n    case 'add':\n      result = add(a, b)\n      break\n    case 'subtract':\n      result = subtract(a, b)\n      break\n    case 'multiply':\n      result = multiply(a, b)\n      break\n    case 'divide':\n      result = divide(a, b)\n      break\n    default:\n      alert('Something went wrong!')\n      break\n  }\n\n  return removeTrailingZero(result)\n}\n\n//========================================================================//\n\nfunction add(a, b) {\n  let num1\n  let num2\n  const p = a.indexOf('.') > -1 || b.indexOf('.') > -1 ? getUlps(a, b) : null\n\n  if (p) {\n    // if decimals, do some magic below\n    num1 = convertToInt(a, p)\n    num2 = convertToInt(b, p)\n  } else {\n    // If no decimals, parse and go\n    num1 = parseFloat(a)\n    num2 = parseFloat(b)\n  }\n\n  const result = num1 + num2\n\n  return (result / Math.pow(10, p)).toFixed(p)\n}\n\n//========================================================================//\n\nfunction subtract(a, b) {\n  let num1\n  let num2\n  const p = a.indexOf('.') > -1 || b.indexOf('.') > -1 ? getUlps(a, b) : null\n\n  if (p) {\n    // if decimals, do some magic below\n    num1 = convertToInt(a, p)\n    num2 = convertToInt(b, p)\n  } else {\n    // If no decimals, parse and go\n    num1 = parseFloat(a)\n    num2 = parseFloat(b)\n  }\n\n  const result = num1 - num2\n\n  return (result / Math.pow(10, p)).toFixed(p)\n}\n\n//========================================================================//\n\nfunction multiply(a, b) {\n  return (a * b).toFixed(getUlps(a, b))\n}\n\n//========================================================================//\n\nfunction divide(a, b) {\n  return (a / b).toFixed(getUlps(a, b))\n}\n\n//========================================================================//\n\nfunction getUlps(a, b) {\n  // Get the units in the last place. Returns the length for the longer of the two\n  // Only used for adding and subtracting\n  const num1 = a.indexOf('.') > -1 ? a.length - a.indexOf('.') - 1 : 0\n  const num2 = b.indexOf('.') > -1 ? b.length - b.indexOf('.') - 1 : 0\n  return num1 >= num2 ? num1 : num2\n}\n\n//========================================================================//\n\nfunction convertToInt(str, p) {\n  let num = parseFloat(str)\n  // If decimals, get places.\n  const places = str.indexOf('.') > -1 ? str.length - str.indexOf('.') - 1 : 0\n\n  if (places < p) {\n    const padding = p - places\n    const multiplyier = Math.pow(10, places + padding)\n\n    return num * multiplyier\n  } else {\n    return num * Math.pow(10, p)\n  }\n}\n\n//========================================================================//\n\nfunction removeTrailingZero(str) {\n  if (str.indexOf('.') > -1) {\n    let countZeros = 0\n    // Count ending zeros after decimal and remove\n    for (let i = str.length - 1; i >= 0; i--) {\n      if (str.charAt(i) === '0') {\n        countZeros++\n      } else {\n        break\n      }\n    }\n    if (countZeros > 0) {\n      // Remove trailing zeros from final result\n      const removeZeros = str.substring(0, str.length - countZeros)\n      // If decimal is all that is left, remove that also\n      if (removeZeros.indexOf('.') === removeZeros.length - 1) {\n        return removeZeros.substring(0, removeZeros.indexOf('.'))\n      }\n      return removeZeros\n    } else {\n      // No trailing zeros found\n      return str\n    }\n  } else {\n    // No decimal in number\n    return str\n  }\n}\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  queuedOperation: null,\n  lastAction: null,\n  activeId: null,\n  firstValue: \"0\",\n  secondValue: \"0\",\n  displayValue: \"0\",\n};\n\nconst calculatorSlice = createSlice({\n  name: \"calculator\",\n  initialState,\n  reducers: {\n    updateQueuedOperation(state, action) {\n      state.queuedOperation = action.payload;\n    },\n    updateLastAction(state, action) {\n      state.lastAction = action.payload;\n    },\n    updateActiveId(state, action) {\n      state.activeId = action.payload;\n    },\n    updateFirstValue(state, action) {\n      state.firstValue = action.payload;\n    },\n    updateSecondValue(state, action) {\n      state.secondValue = action.payload;\n    },\n    updateDisplayValue(state, action) {\n      state.displayValue = action.payload;\n    },\n    resetAll(state) {\n      state.queuedOperation = null;\n      state.lastAction = null;\n      state.activeId = null;\n      state.firstValue = \"0\";\n      state.secondValue = \"0\";\n      state.displayValue = \"0\";\n    },\n  },\n});\n\nexport const {\n  updateQueuedOperation,\n  updateLastAction,\n  updateActiveId,\n  updateFirstValue,\n  updateSecondValue,\n  updateDisplayValue,\n  resetAll,\n} = calculatorSlice.actions;\n\nexport default calculatorSlice.reducer;","import React from 'react'\nimport './style.css'\n\nexport const DisplayField = (props) => {\n  return (\n    <div className=\"display-container\">\n      <input value={props.value} className=\"display-field\" readOnly />\n    </div>\n  )\n}\n","import React from \"react\";\nimport \"./style.css\";\n\nexport const CalculatorButton = (props) => {\n  const onClickHandler = (e) => {\n\t\tif(!props.disabled){\n\t\t\tprops.onClickHandler(e);\n\t\t}\n    \n  };\n  return (\n    <div className={`button-container ${props.wrapperClass ? props.wrapperClass : ''}`}>\n      <div\n        id={props.id}\n        className={`button ${props.className}`}\n        onClick={(e) => onClickHandler(e)}\n      >\n        {props.text}\n      </div>\n    </div>\n  );\n};","import React from 'react'\nimport runOperations from '../../helpers/runOperations'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {\n  updateQueuedOperation,\n  updateLastAction,\n  updateActiveId,\n  updateFirstValue,\n  updateSecondValue,\n  updateDisplayValue,\n  resetAll,\n} from './calculatorSlice'\nimport { DisplayField } from './DisplayField'\nimport { CalculatorButton } from './CalculatorButton'\nimport './style.css'\n\nexport const CalculatorPage = () => {\n  const dispatch = useDispatch()\n  const actionsList = {\n    number: 'number',\n    operator: 'operator',\n    equals: 'equals',\n  }\n  const lastAction = useSelector((state) => state.calculator.lastAction)\n  const activeId = useSelector((state) => state.calculator.activeId)\n  const firstValue = useSelector((state) => state.calculator.firstValue)\n  const secondValue = useSelector((state) => state.calculator.secondValue)\n  const displayValue = useSelector((state) => state.calculator.displayValue)\n  const queuedOperation = useSelector(\n    (state) => state.calculator.queuedOperation\n  )\n\n  const disableNumbers = displayValue.length === 8\n\n  //==========================================================================//\n\n  const onClickHandler = ({ target }) => {\n    const { id, classList } = target\n    const btn = classList.value.substring('button'.length + 1)\n\n    if (btn === 'number') handleNumberClick(id)\n    if (btn === 'sign') handleSignClick(id)\n    if (btn === 'all-clear') handleAllClearClick()\n    if (btn === 'clear') handleClearClick()\n    if (btn === 'decimal') handleDecimalClick()\n\n    if (btn === 'operator') {\n      if (id === 'equal') {\n        handleEqualsClick()\n      } else {\n        handleOperatorClick(id)\n      }\n    }\n  }\n\n  //==========================================================================//\n\n  const handleNumberClick = (number) => {\n    let nextValue\n\n    if (displayValue === '0') {\n      if (number === '0') {\n        return\n      }\n      nextValue = number\n    } else if (lastAction === actionsList.equals) {\n      nextValue = number\n      dispatch(resetAll())\n    } else if (lastAction === actionsList.operator) {\n      nextValue = number\n      dispatch(updateFirstValue(displayValue))\n    } else {\n      if (\n        displayValue.includes('.') &&\n        displayValue.length - displayValue.indexOf('.') - 1 === 3\n      ) {\n        return\n      }\n      nextValue = `${displayValue}${number}`\n    }\n\n    if (lastAction !== actionsList.number) {\n      dispatch(updateLastAction(actionsList.number))\n    }\n\n    if (activeId) {\n      handleActiveId()\n    }\n    dispatch(updateDisplayValue(nextValue))\n  }\n\n  //==========================================================================//\n\n  const handleOperatorClick = (operator) => {\n    if (lastAction) {\n      if (lastAction === actionsList.operator) {\n        if (queuedOperation === operator) {\n          return\n        } else {\n          handleActiveId(operator)\n          dispatch(updateQueuedOperation(operator))\n          return\n        }\n      }\n\n      if (lastAction === actionsList.equals) {\n        dispatch(updateFirstValue(displayValue))\n      }\n\n      if (lastAction === actionsList.number) {\n        if (!queuedOperation) {\n          dispatch(updateFirstValue(displayValue))\n        } else {\n          const result = runOperations(\n            queuedOperation,\n            firstValue,\n            displayValue\n          )\n          dispatch(updateDisplayValue(result))\n        }\n      }\n\n      if (queuedOperation !== operator) {\n        dispatch(updateQueuedOperation(operator))\n      }\n      handleActiveId(operator)\n      dispatch(updateLastAction(actionsList.operator))\n    }\n  }\n\n  //==========================================================================//\n\n  const handleEqualsClick = () => {\n    let result\n\n    if (lastAction && queuedOperation) {\n      if (lastAction !== actionsList.equals) {\n        dispatch(updateSecondValue(displayValue))\n        result = runOperations(queuedOperation, firstValue, displayValue)\n      } else {\n        result = runOperations(queuedOperation, displayValue, secondValue)\n      }\n\n      if (lastAction !== actionsList.equals) {\n        dispatch(updateLastAction(actionsList.equals))\n      }\n\n      if (activeId) {\n        handleActiveId()\n      }\n      dispatch(updateDisplayValue(result))\n    }\n  }\n\n  //==========================================================================//\n\n  const handleSignClick = (sign) => {\n    let result\n    if (displayValue.indexOf('-') > -1) {\n      result = displayValue.substring(1)\n    } else {\n      result = `-${displayValue}`\n    }\n    dispatch(updateDisplayValue(result))\n  }\n\n  //==========================================================================//\n\n  const handleDecimalClick = () => {\n    let result\n    if (lastAction === actionsList.equals) {\n      result = '0.'\n      dispatch(resetAll())\n    } else if (lastAction === actionsList.operator) {\n      result = '0.'\n    } else if (!displayValue.includes('.')) {\n      result = `${displayValue}.`\n    }\n\n    if (result) {\n      dispatch(updateDisplayValue(result))\n      if (lastAction !== actionsList.number) {\n        dispatch(updateLastAction(actionsList.number))\n      }\n\n      if (activeId) {\n        handleActiveId()\n      }\n    }\n  }\n\n  //==========================================================================//\n\n  const handleClearClick = () => {\n    if (lastAction === actionsList.number) {\n      dispatch(updateDisplayValue('0'))\n    }\n  }\n\n  //==========================================================================//\n\n  const handleAllClearClick = () => {\n    if (lastAction || displayValue !== '0') {\n      handleActiveId()\n      dispatch(resetAll())\n    }\n  }\n\n  //==========================================================================//\n\n  const handleActiveId = (id) => {\n    if (activeId) {\n      document.getElementById(activeId).classList.remove('active')\n    }\n    if (id) {\n      document.getElementById(id).classList.add('active')\n      dispatch(updateActiveId(id))\n    } else if (activeId && !id) {\n      dispatch(updateActiveId(null))\n    }\n  }\n  //==========================================================================//\n\n  return (\n    <section className=\"page-container calculator\">\n      <div>\n        <header>\n          <h1>Calculator</h1>\n        </header>\n      </div>\n      <div className=\"calculator-table-container\">\n        <table>\n          <tbody>\n            <tr>\n              <td colSpan=\"4\">\n                <DisplayField value={displayValue} />\n              </td>\n            </tr>\n            <tr className=\"button-row\">\n              <td>\n                <CalculatorButton\n                  text={'AC'}\n                  id={'all-clear'}\n                  className={'all-clear'}\n                  onClickHandler={onClickHandler}\n                  isActive\n                />\n              </td>\n              <td>\n                <CalculatorButton\n                  text={'C'}\n                  id={'clear'}\n                  className={'clear'}\n                  onClickHandler={onClickHandler}\n                />\n              </td>\n              <td>\n                <CalculatorButton\n                  text={'+/-'}\n                  id={'sign'}\n                  className={'sign'}\n                  onClickHandler={onClickHandler}\n                />\n              </td>\n              <td>\n                <CalculatorButton\n                  text={'\\u00F7'}\n                  id={'divide'}\n                  className={'operator'}\n                  onClickHandler={onClickHandler}\n                />\n              </td>\n            </tr>\n            <tr className=\"button-row\">\n              <td>\n                <CalculatorButton\n                  text={'7'}\n                  id={'7'}\n                  className={'number'}\n                  disabled={disableNumbers}\n                  onClickHandler={onClickHandler}\n                />\n              </td>\n              <td>\n                <CalculatorButton\n                  text={'8'}\n                  id={'8'}\n                  className={'number'}\n                  disabled={disableNumbers}\n                  onClickHandler={onClickHandler}\n                />\n              </td>\n              <td>\n                <CalculatorButton\n                  text={'9'}\n                  id={'9'}\n                  className={'number'}\n                  disabled={disableNumbers}\n                  onClickHandler={onClickHandler}\n                />\n              </td>\n              <td>\n                <CalculatorButton\n                  text={'x'}\n                  id={'multiply'}\n                  className={'operator'}\n                  onClickHandler={onClickHandler}\n                />\n              </td>\n            </tr>\n            <tr className=\"button-row\">\n              <td>\n                <CalculatorButton\n                  text={'4'}\n                  id={'4'}\n                  className={'number'}\n                  disabled={disableNumbers}\n                  onClickHandler={onClickHandler}\n                />\n              </td>\n              <td>\n                <CalculatorButton\n                  text={'5'}\n                  id={'5'}\n                  className={'number'}\n                  disabled={disableNumbers}\n                  onClickHandler={onClickHandler}\n                />\n              </td>\n              <td>\n                <CalculatorButton\n                  text={'6'}\n                  id={'6'}\n                  className={'number'}\n                  disabled={disableNumbers}\n                  onClickHandler={onClickHandler}\n                />\n              </td>\n              <td>\n                <CalculatorButton\n                  text={'-'}\n                  id={'subtract'}\n                  className={'operator'}\n                  onClickHandler={onClickHandler}\n                />\n              </td>\n            </tr>\n            <tr className=\"button-row\">\n              <td>\n                <CalculatorButton\n                  text={'1'}\n                  id={'1'}\n                  className={'number'}\n                  disabled={disableNumbers}\n                  onClickHandler={onClickHandler}\n                />\n              </td>\n              <td>\n                <CalculatorButton\n                  text={'2'}\n                  id={'2'}\n                  className={'number'}\n                  disabled={disableNumbers}\n                  onClickHandler={onClickHandler}\n                />\n              </td>\n              <td>\n                <CalculatorButton\n                  text={'3'}\n                  id={'3'}\n                  className={'number'}\n                  disabled={disableNumbers}\n                  onClickHandler={onClickHandler}\n                />\n              </td>\n              <td>\n                <CalculatorButton\n                  text={'+'}\n                  id={'add'}\n                  className={'operator'}\n                  onClickHandler={onClickHandler}\n                />\n              </td>\n            </tr>\n            <tr className=\"button-row\">\n              <td colSpan=\"2\">\n                <CalculatorButton\n                  text={'0'}\n                  id={'0'}\n                  className={'number'}\n                  wrapperClass={'zero-cell'}\n                  disabled={disableNumbers}\n                  onClickHandler={onClickHandler}\n                />\n              </td>\n              <td>\n                <CalculatorButton\n                  text={'.'}\n                  id={'decimal'}\n                  className={'decimal'}\n                  disabled={disableNumbers}\n                  onClickHandler={onClickHandler}\n                />\n              </td>\n              <td>\n                <CalculatorButton\n                  text={'='}\n                  id={'equal'}\n                  className={'operator'}\n                  onClickHandler={onClickHandler}\n                />\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </section>\n  )\n}\n","import React from \"react\";\n\nexport const NotFound = () => {\n  return (\n    <div className=\"page-container\">\n      <h3>Sorry, page not found!</h3>\n    </div>\n  );\n}","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nexport const Navbar = () => {\n  return (\n    <nav>\n      <div className=\"main-links\">\n        <div className=\"nav-brand\">\n          <Link to=\"/\">MG-DOTCOM</Link>\n        </div>\n        <div className=\"nav-links\">\n          <Link to=\"/projects\">Projects</Link>\n        </div>\n      </div>\n    </nav>\n  )\n}\n","import React from 'react'\nimport { Switch, Route, Redirect } from 'react-router-dom'\nimport { Home } from './app/Home'\nimport { Projects } from './app/Projects'\nimport { ConverterPage } from './features/converter/ConverterPage'\nimport { BorderPreview } from './features/borderPreview/BorderPreview'\nimport { CalculatorPage } from './features/calculator/CalculatorPage'\nimport { NotFound } from './app/NotFound'\n\nimport { Navbar } from './app/Navbar'\n\nfunction App() {\n  return (\n    <div>\n      <div className=\"nav-container\">\n        <Navbar />\n      </div>\n      <div className=\"app-container\">\n        <div>\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/projects\" component={Projects} />\n            <Route exact path=\"/bin2dec\" component={ConverterPage} />\n            <Route exact path=\"/border-preview\" component={BorderPreview} />\n            <Route exact path=\"/calculator\" component={CalculatorPage} />\n            <Route>\n              <NotFound />\n            </Route>\n            <Redirect to=\"/\" />\n          </Switch>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import { rest, setupWorker } from 'msw'\nimport { factory, oneOf, manyOf, primaryKey } from '@mswjs/data'\nimport { nanoid } from '@reduxjs/toolkit'\nimport faker from 'faker'\nimport seedrandom from 'seedrandom'\nimport { Server as MockSocketServer } from 'mock-socket'\nimport { setRandom } from 'txtgen'\n\nimport { parseISO } from 'date-fns'\n\nconst NUM_USERS = 3\nconst POSTS_PER_USER = 3\nconst RECENT_NOTIFICATIONS_DAYS = 7\n\n// Add an extra delay to all endpoints, so loading spinners show up.\nconst ARTIFICIAL_DELAY_MS = 2000\n\n/* RNG setup */\n\n// Set up a seeded random number generator, so that we get\n// a consistent set of users / entries each time the page loads.\n// This can be reset by deleting this localStorage value,\n// or turned off by setting `useSeededRNG` to false.\nlet useSeededRNG = true\n\nlet rng = seedrandom()\n\nif (useSeededRNG) {\n  let randomSeedString = localStorage.getItem('randomTimestampSeed')\n  let seedDate\n\n  if (randomSeedString) {\n    seedDate = new Date(randomSeedString)\n  } else {\n    seedDate = new Date()\n    randomSeedString = seedDate.toISOString()\n    localStorage.setItem('randomTimestampSeed', randomSeedString)\n  }\n\n  rng = seedrandom(randomSeedString)\n  setRandom(rng)\n  faker.seed(seedDate.getTime())\n}\n\nfunction getRandomInt(min, max) {\n  min = Math.ceil(min)\n  max = Math.floor(max)\n  return Math.floor(rng() * (max - min + 1)) + min\n}\n\nconst randomFromArray = (array) => {\n  const index = getRandomInt(0, array.length - 1)\n  return array[index]\n}\n\n/* MSW Data Model Setup */\n\nexport const db = factory({\n  user: {\n    id: primaryKey(nanoid),\n    firstName: String,\n    lastName: String,\n    name: String,\n    username: String,\n    posts: manyOf('post'),\n  },\n  post: {\n    id: primaryKey(nanoid),\n    title: String,\n    date: String,\n    content: String,\n    reactions: oneOf('reaction'),\n    comments: manyOf('comment'),\n    user: oneOf('user'),\n  },\n  comment: {\n    id: primaryKey(String),\n    date: String,\n    text: String,\n    post: oneOf('post'),\n  },\n  reaction: {\n    id: primaryKey(nanoid),\n    thumbsUp: Number,\n    hooray: Number,\n    heart: Number,\n    rocket: Number,\n    eyes: Number,\n    post: oneOf('post'),\n  },\n})\n\nconst createUserData = () => {\n  const firstName = faker.name.firstName()\n  const lastName = faker.name.lastName()\n\n  return {\n    firstName,\n    lastName,\n    name: `${firstName} ${lastName}`,\n    username: faker.internet.userName(),\n  }\n}\n\nconst createPostData = (user) => {\n  return {\n    title: faker.lorem.words(),\n    date: faker.date.recent(RECENT_NOTIFICATIONS_DAYS).toISOString(),\n    user,\n    content: faker.lorem.paragraphs(),\n    reactions: db.reaction.create(),\n  }\n}\n\n// Create an initial set of users and posts\nfor (let i = 0; i < NUM_USERS; i++) {\n  const author = db.user.create(createUserData())\n\n  for (let j = 0; j < POSTS_PER_USER; j++) {\n    const newPost = createPostData(author)\n    db.post.create(newPost)\n  }\n}\n\nconst serializePost = (post) => ({\n  ...post,\n  user: post.user.id,\n})\n\n/* MSW REST API Handlers */\n\nexport const handlers = [\n  rest.get('/fakeApi/posts', function (req, res, ctx) {\n    const posts = db.post.getAll().map(serializePost)\n    return res(ctx.delay(ARTIFICIAL_DELAY_MS), ctx.json(posts))\n  }),\n  rest.post('/fakeApi/posts', function (req, res, ctx) {\n    const data = req.body\n\n    if (data.content === 'error') {\n      return res(\n        ctx.delay(ARTIFICIAL_DELAY_MS),\n        ctx.status(500),\n        ctx.json('Server error saving this post!')\n      )\n    }\n\n    data.date = new Date().toISOString()\n\n    const user = db.user.findFirst({ where: { id: { equals: data.user } } })\n    data.user = user\n    data.reactions = db.reaction.create()\n\n    const post = db.post.create(data)\n    return res(ctx.delay(ARTIFICIAL_DELAY_MS), ctx.json(serializePost(post)))\n  }),\n  rest.get('/fakeApi/posts/:postId', function (req, res, ctx) {\n    const post = db.post.findFirst({\n      where: { id: { equals: req.params.postId } },\n    })\n    return res(ctx.delay(ARTIFICIAL_DELAY_MS), ctx.json(serializePost(post)))\n  }),\n  rest.patch('/fakeApi/posts/:postId', (req, res, ctx) => {\n    const { id, ...data } = req.body\n    const updatedPost = db.post.update({\n      where: { id: { equals: req.params.postId } },\n      data,\n    })\n    return res(\n      ctx.delay(ARTIFICIAL_DELAY_MS),\n      ctx.json(serializePost(updatedPost))\n    )\n  }),\n\n  rest.get('/fakeApi/posts/:postId/comments', (req, res, ctx) => {\n    const post = db.post.findFirst({\n      where: { id: { equals: req.params.postId } },\n    })\n    return res(\n      ctx.delay(ARTIFICIAL_DELAY_MS),\n      ctx.json({ comments: post.comments })\n    )\n  }),\n\n  rest.post('/fakeApi/posts/:postId/reactions', (req, res, ctx) => {\n    const postId = req.params.postId\n    const reaction = req.body.reaction\n    const post = db.post.findFirst({\n      where: { id: { equals: postId } },\n    })\n\n    const updatedPost = db.post.update({\n      where: { id: { equals: postId } },\n      data: {\n        reactions: {\n          ...post.reactions,\n          [reaction]: (post.reactions[reaction] += 1),\n        },\n      },\n    })\n\n    return res(\n      ctx.delay(ARTIFICIAL_DELAY_MS),\n      ctx.json(serializePost(updatedPost))\n    )\n  }),\n  rest.get('/fakeApi/notifications', (req, res, ctx) => {\n    const numNotifications = getRandomInt(1, 5)\n\n    let notifications = generateRandomNotifications(\n      undefined,\n      numNotifications,\n      db\n    )\n\n    return res(ctx.delay(ARTIFICIAL_DELAY_MS), ctx.json(notifications))\n  }),\n  rest.get('/fakeApi/users', (req, res, ctx) => {\n    return res(ctx.delay(ARTIFICIAL_DELAY_MS), ctx.json(db.user.getAll()))\n  }),\n]\n\nexport const worker = setupWorker(...handlers)\n// worker.printHandlers() // Optional: nice for debugging to see all available route handlers that will be intercepted\n\n/* Mock Websocket Setup */\n\nconst socketServer = new MockSocketServer('ws://localhost')\n\nlet currentSocket\n\nconst sendMessage = (socket, obj) => {\n  socket.send(JSON.stringify(obj))\n}\n\n// Allow our UI to fake the server pushing out some notifications over the websocket,\n// as if other users were interacting with the system.\nconst sendRandomNotifications = (socket, since) => {\n  const numNotifications = getRandomInt(1, 5)\n\n  const notifications = generateRandomNotifications(since, numNotifications, db)\n\n  sendMessage(socket, { type: 'notifications', payload: notifications })\n}\n\nexport const forceGenerateNotifications = (since) => {\n  sendRandomNotifications(currentSocket, since)\n}\n\nsocketServer.on('connection', (socket) => {\n  currentSocket = socket\n\n  socket.on('message', (data) => {\n    const message = JSON.parse(data)\n\n    switch (message.type) {\n      case 'notifications': {\n        const since = message.payload\n        sendRandomNotifications(socket, since)\n        break\n      }\n      default:\n        break\n    }\n  })\n})\n\n/* Random Notifications Generation */\n\nconst notificationTemplates = [\n  'poked you',\n  'says hi!',\n  `is glad we're friends`,\n  'sent you a gift',\n]\n\nfunction generateRandomNotifications(since, numNotifications, db) {\n  const now = new Date()\n  let pastDate\n\n  if (since) {\n    pastDate = parseISO(since)\n  } else {\n    pastDate = new Date(now.valueOf())\n    pastDate.setMinutes(pastDate.getMinutes() - 15)\n  }\n\n  // Create N random notifications. We won't bother saving these\n  // in the DB - just generate a new batch and return them.\n  const notifications = [...Array(numNotifications)].map(() => {\n    const user = randomFromArray(db.user.getAll())\n    const template = randomFromArray(notificationTemplates)\n    return {\n      id: nanoid(),\n      date: faker.date.between(pastDate, now).toISOString(),\n      message: template,\n      user: user.id,\n    }\n  })\n\n  return notifications\n}\n","import { configureStore } from '@reduxjs/toolkit'\nimport converterReducer from '../features/converter/converterSlice'\nimport borderPreviewReducer from '../features/borderPreview/borderPreviewSlice'\nimport calculatorReducer from '../features/calculator/calculatorSlice'\n\nexport const store = configureStore({\n  reducer: {\n    converter: converterReducer,\n    borderPreview: borderPreviewReducer,\n    calculator: calculatorReducer,\n  },\n})\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport './index.css'\nimport App from './App'\nimport { store } from './app/store'\nimport { Provider } from 'react-redux'\n\nimport { worker } from './api/server'\n\n// Start our mock API server\nworker.start({ onUnhandledRequest: 'bypass' })\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}