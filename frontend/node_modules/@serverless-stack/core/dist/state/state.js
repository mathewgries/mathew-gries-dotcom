"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.suggestStage = exports.setStage = exports.getStage = exports.directory = exports.init = exports.resolve = void 0;
const fs_1 = __importDefault(require("fs"));
const path_1 = __importDefault(require("path"));
const os_1 = __importDefault(require("os"));
const aws_sdk_1 = require("aws-sdk");
function resolve(root, relative) {
    return path_1.default.resolve(root, ".sst", relative);
}
exports.resolve = resolve;
function init(root) {
    const dir = directory(root);
    if (fs_1.default.existsSync(dir))
        return;
    fs_1.default.mkdirSync(dir, { recursive: true });
}
exports.init = init;
function directory(root) {
    return resolve(root, "");
}
exports.directory = directory;
function resolveStage(root) {
    return resolve(root, "stage");
}
function getStage(root) {
    const file = resolveStage(root);
    try {
        return fs_1.default.readFileSync(file).toString().trim();
    }
    catch (_a) {
        return null;
    }
}
exports.getStage = getStage;
function setStage(root, stage) {
    const file = resolveStage(root);
    fs_1.default.writeFileSync(file, stage);
}
exports.setStage = setStage;
async function suggestStage() {
    const client = new aws_sdk_1.STS();
    const result = await client
        .getCallerIdentity()
        .promise()
        .then((result) => path_1.default.basename(result.Arn))
        .catch(() => os_1.default.userInfo().username);
    return result.replace(/[^A-Za-z0-9]/g, "-");
}
exports.suggestStage = suggestStage;
