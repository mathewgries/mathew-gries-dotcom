{"ast":null,"code":"var _jsxFileName = \"/Users/mat/projects/mathew-gries-dotcom/frontend/src/features/borderPreview/BorderPreview.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { updateRadius } from './borderPreviewSlice';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FormInput = props => {\n  const {\n    label,\n    text,\n    name,\n    value,\n    inputChange\n  } = props;\n\n  const handleOnChange = ({\n    target\n  }) => {\n    inputChange(target);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"input-group\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: text,\n      name: name,\n      value: value,\n      onChange: e => handleOnChange(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"%\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_c = FormInput;\n\nconst StylePreview = ({\n  styles\n}) => {\n  let renderCSSFormat = 'style {\\n';\n\n  for (let style in styles) {\n    renderCSSFormat += `\\t${styles[style].str}: ${styles[style].value}%;\\n`;\n  }\n\n  renderCSSFormat += '}';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: renderCSSFormat\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = StylePreview;\nexport const BorderPreview = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const styles = useSelector(state => state.borderPreview);\n\n  const handleInputChange = ({\n    name,\n    value\n  }) => {\n    if (value.length > 1 && value.charAt(0) === '0') {\n      value = value.substring(1);\n    }\n\n    if (value === '') {\n      value = '0';\n    }\n\n    dispatch(updateRadius({\n      name,\n      value\n    }));\n  };\n\n  const renderBorderBox = () => {\n    const formattedStyles = {};\n\n    for (let style in styles) {\n      formattedStyles[style] = styles[style].value + '%';\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: formattedStyles,\n      className: \"border-box\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"style-preview\",\n        children: /*#__PURE__*/_jsxDEV(StylePreview, {\n          styles: styles\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this);\n  };\n\n  const renderForm = () => {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"form-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(FormInput, {\n            label: 'Top-Left',\n            type: 'text',\n            name: 'borderTopLeftRadius',\n            value: styles.borderTopLeftRadius.value,\n            inputChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(FormInput, {\n            label: 'Top-Right',\n            type: 'text',\n            name: 'borderTopRightRadius',\n            value: styles.borderTopRightRadius.value,\n            inputChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(FormInput, {\n            label: 'Bottom-Left',\n            type: 'text',\n            name: 'borderBottomLeftRadius',\n            value: styles.borderBottomLeftRadius.value,\n            inputChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 6\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"bottom-right\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: 'borderBottomRightRadius',\n              value: styles.borderBottomRightRadius.value,\n              onChange: e => handleInputChange(e.target)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"%\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Border Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [renderBorderBox(), renderForm()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BorderPreview, \"J1W+vdl4W7Y6z+lO7lTRcZ8C7nI=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c3 = BorderPreview;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"FormInput\");\n$RefreshReg$(_c2, \"StylePreview\");\n$RefreshReg$(_c3, \"BorderPreview\");","map":{"version":3,"sources":["/Users/mat/projects/mathew-gries-dotcom/frontend/src/features/borderPreview/BorderPreview.js"],"names":["React","useSelector","useDispatch","updateRadius","FormInput","props","label","text","name","value","inputChange","handleOnChange","target","e","StylePreview","styles","renderCSSFormat","style","str","BorderPreview","dispatch","state","borderPreview","handleInputChange","length","charAt","substring","renderBorderBox","formattedStyles","renderForm","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { updateRadius } from './borderPreviewSlice'\nimport './style.css'\n\nconst FormInput = (props) => {\n  const { label, text, name, value, inputChange } = props\n\n  const handleOnChange = ({ target }) => {\n    inputChange(target)\n  }\n\n  return (\n    <section className=\"input-group\">\n      <label>{label}</label>\n      <input\n        type={text}\n        name={name}\n        value={value}\n        onChange={(e) => handleOnChange(e)}\n      />\n      <span>%</span>\n    </section>\n  )\n}\n\nconst StylePreview = ({ styles }) => {\n  let renderCSSFormat = 'style {\\n'\n  for (let style in styles) {\n    renderCSSFormat += `\\t${styles[style].str}: ${styles[style].value}%;\\n`\n  }\n  renderCSSFormat += '}'\n\n  return (\n    <div>\n      <pre>{renderCSSFormat}</pre>\n    </div>\n  )\n}\n\nexport const BorderPreview = () => {\n  const dispatch = useDispatch()\n  const styles = useSelector((state) => state.borderPreview)\n\n  const handleInputChange = ({ name, value }) => {\n    if (value.length > 1 && value.charAt(0) === '0') {\n      value = value.substring(1)\n    }\n\n    if (value === '') {\n      value = '0'\n    }\n\n    dispatch(updateRadius({ name, value }))\n  }\n\n  const renderBorderBox = () => {\n    const formattedStyles = {}\n\n    for (let style in styles) {\n      formattedStyles[style] = styles[style].value + '%'\n    }\n\n    return (\n      <div style={formattedStyles} className=\"border-box\">\n        <div className=\"style-preview\">\n          <StylePreview styles={styles} />\n        </div>\n      </div>\n    )\n  }\n\n  const renderForm = () => {\n    return (\n      <section className=\"form-container\">\n        <form>\n          <div>\n            <FormInput\n              label={'Top-Left'}\n              type={'text'}\n              name={'borderTopLeftRadius'}\n              value={styles.borderTopLeftRadius.value}\n              inputChange={handleInputChange}\n            />\n          </div>\n          <div>\n            <FormInput\n              label={'Top-Right'}\n              type={'text'}\n              name={'borderTopRightRadius'}\n              value={styles.borderTopRightRadius.value}\n              inputChange={handleInputChange}\n            />\n          </div>\n          <div>\n\t\t\t\t\t<FormInput\n              label={'Bottom-Left'}\n              type={'text'}\n              name={'borderBottomLeftRadius'}\n              value={styles.borderBottomLeftRadius.value}\n              inputChange={handleInputChange}\n            />\n          </div>\n          <div>\n            <div>\n              <label>bottom-right</label>\n            </div>\n            <div>\n              <input\n                type=\"text\"\n                name={'borderBottomRightRadius'}\n                value={styles.borderBottomRightRadius.value}\n                onChange={(e) => handleInputChange(e.target)}\n              />\n              <span>%</span>\n            </div>\n          </div>\n        </form>\n      </section>\n    )\n  }\n\n  return (\n    <section className=\"page-container\">\n      <header>\n        <h1>Border Preview</h1>\n      </header>\n      <div>\n        {renderBorderBox()}\n        {renderForm()}\n      </div>\n    </section>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}