{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  queuedOperation: null,\n  lastAction: null,\n  activeId: null,\n  firstValue: \"0\",\n  secondValue: \"0\",\n  displayValue: \"0\"\n};\nconst calculatorSlice = createSlice({\n  name: \"calculator\",\n  initialState,\n  reducers: {\n    updateQueuedOperation(state, action) {\n      state.queuedOperation = action.payload;\n    },\n\n    updateLastAction(state, action) {\n      state.lastAction = action.payload;\n    },\n\n    updateActiveId(state, action) {\n      state.activeId = action.payload;\n    },\n\n    updateFirstValue(state, action) {\n      state.firstValue = action.payload;\n    },\n\n    updateSecondValue(state, action) {\n      state.secondValue = action.payload;\n    },\n\n    updateDisplayValue(state, action) {\n      state.displayValue = action.payload;\n    },\n\n    resetAll(state) {\n      state.queuedOperation = null;\n      state.lastAction = null;\n      state.activeId = null;\n      state.firstValue = \"0\";\n      state.secondValue = \"0\";\n      state.displayValue = \"0\";\n    }\n\n  }\n});\nexport const {\n  updateQueuedOperation,\n  updateLastAction,\n  updateActiveId,\n  updateFirstValue,\n  updateSecondValue,\n  updateDisplayValue,\n  resetAll\n} = calculatorSlice.actions;\nexport default calculatorSlice.reducer;","map":{"version":3,"sources":["/Users/mat/projects/mathew-gries-dotcom/frontend/src/features/calculator/calculatorSlice.js"],"names":["createSlice","initialState","queuedOperation","lastAction","activeId","firstValue","secondValue","displayValue","calculatorSlice","name","reducers","updateQueuedOperation","state","action","payload","updateLastAction","updateActiveId","updateFirstValue","updateSecondValue","updateDisplayValue","resetAll","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,eAAe,EAAE,IADE;AAEnBC,EAAAA,UAAU,EAAE,IAFO;AAGnBC,EAAAA,QAAQ,EAAE,IAHS;AAInBC,EAAAA,UAAU,EAAE,GAJO;AAKnBC,EAAAA,WAAW,EAAE,GALM;AAMnBC,EAAAA,YAAY,EAAE;AANK,CAArB;AASA,MAAMC,eAAe,GAAGR,WAAW,CAAC;AAClCS,EAAAA,IAAI,EAAE,YAD4B;AAElCR,EAAAA,YAFkC;AAGlCS,EAAAA,QAAQ,EAAE;AACRC,IAAAA,qBAAqB,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACnCD,MAAAA,KAAK,CAACV,eAAN,GAAwBW,MAAM,CAACC,OAA/B;AACD,KAHO;;AAIRC,IAAAA,gBAAgB,CAACH,KAAD,EAAQC,MAAR,EAAgB;AAC9BD,MAAAA,KAAK,CAACT,UAAN,GAAmBU,MAAM,CAACC,OAA1B;AACD,KANO;;AAORE,IAAAA,cAAc,CAACJ,KAAD,EAAQC,MAAR,EAAgB;AAC5BD,MAAAA,KAAK,CAACR,QAAN,GAAiBS,MAAM,CAACC,OAAxB;AACD,KATO;;AAURG,IAAAA,gBAAgB,CAACL,KAAD,EAAQC,MAAR,EAAgB;AAC9BD,MAAAA,KAAK,CAACP,UAAN,GAAmBQ,MAAM,CAACC,OAA1B;AACD,KAZO;;AAaRI,IAAAA,iBAAiB,CAACN,KAAD,EAAQC,MAAR,EAAgB;AAC/BD,MAAAA,KAAK,CAACN,WAAN,GAAoBO,MAAM,CAACC,OAA3B;AACD,KAfO;;AAgBRK,IAAAA,kBAAkB,CAACP,KAAD,EAAQC,MAAR,EAAgB;AAChCD,MAAAA,KAAK,CAACL,YAAN,GAAqBM,MAAM,CAACC,OAA5B;AACD,KAlBO;;AAmBRM,IAAAA,QAAQ,CAACR,KAAD,EAAQ;AACdA,MAAAA,KAAK,CAACV,eAAN,GAAwB,IAAxB;AACAU,MAAAA,KAAK,CAACT,UAAN,GAAmB,IAAnB;AACAS,MAAAA,KAAK,CAACR,QAAN,GAAiB,IAAjB;AACAQ,MAAAA,KAAK,CAACP,UAAN,GAAmB,GAAnB;AACAO,MAAAA,KAAK,CAACN,WAAN,GAAoB,GAApB;AACAM,MAAAA,KAAK,CAACL,YAAN,GAAqB,GAArB;AACD;;AA1BO;AAHwB,CAAD,CAAnC;AAiCA,OAAO,MAAM;AACXI,EAAAA,qBADW;AAEXI,EAAAA,gBAFW;AAGXC,EAAAA,cAHW;AAIXC,EAAAA,gBAJW;AAKXC,EAAAA,iBALW;AAMXC,EAAAA,kBANW;AAOXC,EAAAA;AAPW,IAQTZ,eAAe,CAACa,OARb;AAUP,eAAeb,eAAe,CAACc,OAA/B","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  queuedOperation: null,\n  lastAction: null,\n  activeId: null,\n  firstValue: \"0\",\n  secondValue: \"0\",\n  displayValue: \"0\",\n};\n\nconst calculatorSlice = createSlice({\n  name: \"calculator\",\n  initialState,\n  reducers: {\n    updateQueuedOperation(state, action) {\n      state.queuedOperation = action.payload;\n    },\n    updateLastAction(state, action) {\n      state.lastAction = action.payload;\n    },\n    updateActiveId(state, action) {\n      state.activeId = action.payload;\n    },\n    updateFirstValue(state, action) {\n      state.firstValue = action.payload;\n    },\n    updateSecondValue(state, action) {\n      state.secondValue = action.payload;\n    },\n    updateDisplayValue(state, action) {\n      state.displayValue = action.payload;\n    },\n    resetAll(state) {\n      state.queuedOperation = null;\n      state.lastAction = null;\n      state.activeId = null;\n      state.firstValue = \"0\";\n      state.secondValue = \"0\";\n      state.displayValue = \"0\";\n    },\n  },\n});\n\nexport const {\n  updateQueuedOperation,\n  updateLastAction,\n  updateActiveId,\n  updateFirstValue,\n  updateSecondValue,\n  updateDisplayValue,\n  resetAll,\n} = calculatorSlice.actions;\n\nexport default calculatorSlice.reducer;"]},"metadata":{},"sourceType":"module"}