{"ast":null,"code":"(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof define === 'function' && define.amd ? define(['exports'], factory) : factory(global.Mock = global.Mock || {});\n})(this, function (exports) {\n  'use strict';\n\n  var commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n  /**\n   * Check if we're required to add a port number.\n   *\n   * @see https://url.spec.whatwg.org/#default-port\n   * @param {Number|String} port Port number we need to check\n   * @param {String} protocol Protocol we need to check against.\n   * @returns {Boolean} Is it a default port for the given protocol\n   * @api private\n   */\n\n  var requiresPort = function required(port, protocol) {\n    protocol = protocol.split(':')[0];\n    port = +port;\n\n    if (!port) {\n      return false;\n    }\n\n    switch (protocol) {\n      case 'http':\n      case 'ws':\n        return port !== 80;\n\n      case 'https':\n      case 'wss':\n        return port !== 443;\n\n      case 'ftp':\n        return port !== 21;\n\n      case 'gopher':\n        return port !== 70;\n\n      case 'file':\n        return false;\n    }\n\n    return port !== 0;\n  };\n\n  var has = Object.prototype.hasOwnProperty;\n  var undef;\n  /**\n   * Decode a URI encoded string.\n   *\n   * @param {String} input The URI encoded string.\n   * @returns {String|Null} The decoded string.\n   * @api private\n   */\n\n  function decode(input) {\n    try {\n      return decodeURIComponent(input.replace(/\\+/g, ' '));\n    } catch (e) {\n      return null;\n    }\n  }\n  /**\n   * Attempts to encode a given input.\n   *\n   * @param {String} input The string that needs to be encoded.\n   * @returns {String|Null} The encoded string.\n   * @api private\n   */\n\n\n  function encode(input) {\n    try {\n      return encodeURIComponent(input);\n    } catch (e) {\n      return null;\n    }\n  }\n  /**\n   * Simple query string parser.\n   *\n   * @param {String} query The query string that needs to be parsed.\n   * @returns {Object}\n   * @api public\n   */\n\n\n  function querystring(query) {\n    var parser = /([^=?#&]+)=?([^&]*)/g,\n        result = {},\n        part;\n\n    while (part = parser.exec(query)) {\n      var key = decode(part[1]),\n          value = decode(part[2]); //\n      // Prevent overriding of existing properties. This ensures that build-in\n      // methods like `toString` or __proto__ are not overriden by malicious\n      // querystrings.\n      //\n      // In the case if failed decoding, we want to omit the key/value pairs\n      // from the result.\n      //\n\n      if (key === null || value === null || key in result) {\n        continue;\n      }\n\n      result[key] = value;\n    }\n\n    return result;\n  }\n  /**\n   * Transform a query string to an object.\n   *\n   * @param {Object} obj Object that should be transformed.\n   * @param {String} prefix Optional prefix.\n   * @returns {String}\n   * @api public\n   */\n\n\n  function querystringify(obj, prefix) {\n    prefix = prefix || '';\n    var pairs = [],\n        value,\n        key; //\n    // Optionally prefix with a '?' if needed\n    //\n\n    if ('string' !== typeof prefix) {\n      prefix = '?';\n    }\n\n    for (key in obj) {\n      if (has.call(obj, key)) {\n        value = obj[key]; //\n        // Edge cases where we actually want to encode the value to an empty\n        // string instead of the stringified value.\n        //\n\n        if (!value && (value === null || value === undef || isNaN(value))) {\n          value = '';\n        }\n\n        key = encode(key);\n        value = encode(value); //\n        // If we failed to encode the strings, we should bail out as we don't\n        // want to add invalid strings to the query.\n        //\n\n        if (key === null || value === null) {\n          continue;\n        }\n\n        pairs.push(key + '=' + value);\n      }\n    }\n\n    return pairs.length ? prefix + pairs.join('&') : '';\n  } //\n  // Expose the module.\n  //\n\n\n  var stringify = querystringify;\n  var parse = querystring;\n  var querystringify_1 = {\n    stringify: stringify,\n    parse: parse\n  };\n  var slashes = /^[A-Za-z][A-Za-z0-9+-.]*:\\/\\//;\n  var protocolre = /^([a-z][a-z0-9.+-]*:)?(\\/\\/)?([\\\\/]+)?([\\S\\s]*)/i;\n  var whitespace = '[\\\\x09\\\\x0A\\\\x0B\\\\x0C\\\\x0D\\\\x20\\\\xA0\\\\u1680\\\\u180E\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200A\\\\u202F\\\\u205F\\\\u3000\\\\u2028\\\\u2029\\\\uFEFF]';\n  var left = new RegExp('^' + whitespace + '+');\n  /**\n   * Trim a given string.\n   *\n   * @param {String} str String to trim.\n   * @public\n   */\n\n  function trimLeft(str) {\n    return (str ? str : '').toString().replace(left, '');\n  }\n  /**\n   * These are the parse rules for the URL parser, it informs the parser\n   * about:\n   *\n   * 0. The char it Needs to parse, if it's a string it should be done using\n   *    indexOf, RegExp using exec and NaN means set as current value.\n   * 1. The property we should set when parsing this value.\n   * 2. Indication if it's backwards or forward parsing, when set as number it's\n   *    the value of extra chars that should be split off.\n   * 3. Inherit from location if non existing in the parser.\n   * 4. `toLowerCase` the resulting value.\n   */\n\n\n  var rules = [['#', 'hash'], // Extract from the back.\n  ['?', 'query'], // Extract from the back.\n  function sanitize(address, url) {\n    // Sanitize what is left of the address\n    return isSpecial(url.protocol) ? address.replace(/\\\\/g, '/') : address;\n  }, ['/', 'pathname'], // Extract from the back.\n  ['@', 'auth', 1], // Extract from the front.\n  [NaN, 'host', undefined, 1, 1], // Set left over value.\n  [/:(\\d+)$/, 'port', undefined, 1], // RegExp the back.\n  [NaN, 'hostname', undefined, 1, 1] // Set left over.\n  ];\n  /**\n   * These properties should not be copied or inherited from. This is only needed\n   * for all non blob URL's as a blob URL does not include a hash, only the\n   * origin.\n   *\n   * @type {Object}\n   * @private\n   */\n\n  var ignore = {\n    hash: 1,\n    query: 1\n  };\n  /**\n   * The location object differs when your code is loaded through a normal page,\n   * Worker or through a worker using a blob. And with the blobble begins the\n   * trouble as the location object will contain the URL of the blob, not the\n   * location of the page where our code is loaded in. The actual origin is\n   * encoded in the `pathname` so we can thankfully generate a good \"default\"\n   * location from it so we can generate proper relative URL's again.\n   *\n   * @param {Object|String} loc Optional default location object.\n   * @returns {Object} lolcation object.\n   * @public\n   */\n\n  function lolcation(loc) {\n    var globalVar;\n\n    if (typeof window !== 'undefined') {\n      globalVar = window;\n    } else if (typeof commonjsGlobal !== 'undefined') {\n      globalVar = commonjsGlobal;\n    } else if (typeof self !== 'undefined') {\n      globalVar = self;\n    } else {\n      globalVar = {};\n    }\n\n    var location = globalVar.location || {};\n    loc = loc || location;\n    var finaldestination = {},\n        type = typeof loc,\n        key;\n\n    if ('blob:' === loc.protocol) {\n      finaldestination = new Url(unescape(loc.pathname), {});\n    } else if ('string' === type) {\n      finaldestination = new Url(loc, {});\n\n      for (key in ignore) {\n        delete finaldestination[key];\n      }\n    } else if ('object' === type) {\n      for (key in loc) {\n        if (key in ignore) {\n          continue;\n        }\n\n        finaldestination[key] = loc[key];\n      }\n\n      if (finaldestination.slashes === undefined) {\n        finaldestination.slashes = slashes.test(loc.href);\n      }\n    }\n\n    return finaldestination;\n  }\n  /**\n   * Check whether a protocol scheme is special.\n   *\n   * @param {String} The protocol scheme of the URL\n   * @return {Boolean} `true` if the protocol scheme is special, else `false`\n   * @private\n   */\n\n\n  function isSpecial(scheme) {\n    return scheme === 'file:' || scheme === 'ftp:' || scheme === 'http:' || scheme === 'https:' || scheme === 'ws:' || scheme === 'wss:';\n  }\n  /**\n   * @typedef ProtocolExtract\n   * @type Object\n   * @property {String} protocol Protocol matched in the URL, in lowercase.\n   * @property {Boolean} slashes `true` if protocol is followed by \"//\", else `false`.\n   * @property {String} rest Rest of the URL that is not part of the protocol.\n   */\n\n  /**\n   * Extract protocol information from a URL with/without double slash (\"//\").\n   *\n   * @param {String} address URL we want to extract from.\n   * @param {Object} location\n   * @return {ProtocolExtract} Extracted information.\n   * @private\n   */\n\n\n  function extractProtocol(address, location) {\n    address = trimLeft(address);\n    location = location || {};\n    var match = protocolre.exec(address);\n    var protocol = match[1] ? match[1].toLowerCase() : '';\n    var forwardSlashes = !!match[2];\n    var otherSlashes = !!match[3];\n    var slashesCount = 0;\n    var rest;\n\n    if (forwardSlashes) {\n      if (otherSlashes) {\n        rest = match[2] + match[3] + match[4];\n        slashesCount = match[2].length + match[3].length;\n      } else {\n        rest = match[2] + match[4];\n        slashesCount = match[2].length;\n      }\n    } else {\n      if (otherSlashes) {\n        rest = match[3] + match[4];\n        slashesCount = match[3].length;\n      } else {\n        rest = match[4];\n      }\n    }\n\n    if (protocol === 'file:') {\n      if (slashesCount >= 2) {\n        rest = rest.slice(2);\n      }\n    } else if (isSpecial(protocol)) {\n      rest = match[4];\n    } else if (protocol) {\n      if (forwardSlashes) {\n        rest = rest.slice(2);\n      }\n    } else if (slashesCount >= 2 && isSpecial(location.protocol)) {\n      rest = match[4];\n    }\n\n    return {\n      protocol: protocol,\n      slashes: forwardSlashes || isSpecial(protocol),\n      slashesCount: slashesCount,\n      rest: rest\n    };\n  }\n  /**\n   * Resolve a relative URL pathname against a base URL pathname.\n   *\n   * @param {String} relative Pathname of the relative URL.\n   * @param {String} base Pathname of the base URL.\n   * @return {String} Resolved pathname.\n   * @private\n   */\n\n\n  function resolve(relative, base) {\n    if (relative === '') {\n      return base;\n    }\n\n    var path = (base || '/').split('/').slice(0, -1).concat(relative.split('/')),\n        i = path.length,\n        last = path[i - 1],\n        unshift = false,\n        up = 0;\n\n    while (i--) {\n      if (path[i] === '.') {\n        path.splice(i, 1);\n      } else if (path[i] === '..') {\n        path.splice(i, 1);\n        up++;\n      } else if (up) {\n        if (i === 0) {\n          unshift = true;\n        }\n\n        path.splice(i, 1);\n        up--;\n      }\n    }\n\n    if (unshift) {\n      path.unshift('');\n    }\n\n    if (last === '.' || last === '..') {\n      path.push('');\n    }\n\n    return path.join('/');\n  }\n  /**\n   * The actual URL instance. Instead of returning an object we've opted-in to\n   * create an actual constructor as it's much more memory efficient and\n   * faster and it pleases my OCD.\n   *\n   * It is worth noting that we should not use `URL` as class name to prevent\n   * clashes with the global URL instance that got introduced in browsers.\n   *\n   * @constructor\n   * @param {String} address URL we want to parse.\n   * @param {Object|String} [location] Location defaults for relative paths.\n   * @param {Boolean|Function} [parser] Parser for the query string.\n   * @private\n   */\n\n\n  function Url(address, location, parser) {\n    address = trimLeft(address);\n\n    if (!(this instanceof Url)) {\n      return new Url(address, location, parser);\n    }\n\n    var relative,\n        extracted,\n        parse,\n        instruction,\n        index,\n        key,\n        instructions = rules.slice(),\n        type = typeof location,\n        url = this,\n        i = 0; //\n    // The following if statements allows this module two have compatibility with\n    // 2 different API:\n    //\n    // 1. Node.js's `url.parse` api which accepts a URL, boolean as arguments\n    //    where the boolean indicates that the query string should also be parsed.\n    //\n    // 2. The `URL` interface of the browser which accepts a URL, object as\n    //    arguments. The supplied object will be used as default values / fall-back\n    //    for relative paths.\n    //\n\n    if ('object' !== type && 'string' !== type) {\n      parser = location;\n      location = null;\n    }\n\n    if (parser && 'function' !== typeof parser) {\n      parser = querystringify_1.parse;\n    }\n\n    location = lolcation(location); //\n    // Extract protocol information before running the instructions.\n    //\n\n    extracted = extractProtocol(address || '', location);\n    relative = !extracted.protocol && !extracted.slashes;\n    url.slashes = extracted.slashes || relative && location.slashes;\n    url.protocol = extracted.protocol || location.protocol || '';\n    address = extracted.rest; //\n    // When the authority component is absent the URL starts with a path\n    // component.\n    //\n\n    if (url.protocol === 'file:' || !extracted.slashes && (extracted.protocol || extracted.slashesCount < 2 || !isSpecial(url.protocol))) {\n      instructions[3] = [/(.*)/, 'pathname'];\n    }\n\n    for (; i < instructions.length; i++) {\n      instruction = instructions[i];\n\n      if (typeof instruction === 'function') {\n        address = instruction(address, url);\n        continue;\n      }\n\n      parse = instruction[0];\n      key = instruction[1];\n\n      if (parse !== parse) {\n        url[key] = address;\n      } else if ('string' === typeof parse) {\n        if (~(index = address.indexOf(parse))) {\n          if ('number' === typeof instruction[2]) {\n            url[key] = address.slice(0, index);\n            address = address.slice(index + instruction[2]);\n          } else {\n            url[key] = address.slice(index);\n            address = address.slice(0, index);\n          }\n        }\n      } else if (index = parse.exec(address)) {\n        url[key] = index[1];\n        address = address.slice(0, index.index);\n      }\n\n      url[key] = url[key] || (relative && instruction[3] ? location[key] || '' : ''); //\n      // Hostname, host and protocol should be lowercased so they can be used to\n      // create a proper `origin`.\n      //\n\n      if (instruction[4]) {\n        url[key] = url[key].toLowerCase();\n      }\n    } //\n    // Also parse the supplied query string in to an object. If we're supplied\n    // with a custom parser as function use that instead of the default build-in\n    // parser.\n    //\n\n\n    if (parser) {\n      url.query = parser(url.query);\n    } //\n    // If the URL is relative, resolve the pathname against the base URL.\n    //\n\n\n    if (relative && location.slashes && url.pathname.charAt(0) !== '/' && (url.pathname !== '' || location.pathname !== '')) {\n      url.pathname = resolve(url.pathname, location.pathname);\n    } //\n    // Default to a / for pathname if none exists. This normalizes the URL\n    // to always have a /\n    //\n\n\n    if (url.pathname.charAt(0) !== '/' && isSpecial(url.protocol)) {\n      url.pathname = '/' + url.pathname;\n    } //\n    // We should not add port numbers if they are already the default port number\n    // for a given protocol. As the host also contains the port number we're going\n    // override it with the hostname which contains no port number.\n    //\n\n\n    if (!requiresPort(url.port, url.protocol)) {\n      url.host = url.hostname;\n      url.port = '';\n    } //\n    // Parse down the `auth` for the username and password.\n    //\n\n\n    url.username = url.password = '';\n\n    if (url.auth) {\n      instruction = url.auth.split(':');\n      url.username = instruction[0] || '';\n      url.password = instruction[1] || '';\n    }\n\n    url.origin = url.protocol !== 'file:' && isSpecial(url.protocol) && url.host ? url.protocol + '//' + url.host : 'null'; //\n    // The href is just the compiled result.\n    //\n\n    url.href = url.toString();\n  }\n  /**\n   * This is convenience method for changing properties in the URL instance to\n   * insure that they all propagate correctly.\n   *\n   * @param {String} part          Property we need to adjust.\n   * @param {Mixed} value          The newly assigned value.\n   * @param {Boolean|Function} fn  When setting the query, it will be the function\n   *                               used to parse the query.\n   *                               When setting the protocol, double slash will be\n   *                               removed from the final url if it is true.\n   * @returns {URL} URL instance for chaining.\n   * @public\n   */\n\n\n  function set(part, value, fn) {\n    var url = this;\n\n    switch (part) {\n      case 'query':\n        if ('string' === typeof value && value.length) {\n          value = (fn || querystringify_1.parse)(value);\n        }\n\n        url[part] = value;\n        break;\n\n      case 'port':\n        url[part] = value;\n\n        if (!requiresPort(value, url.protocol)) {\n          url.host = url.hostname;\n          url[part] = '';\n        } else if (value) {\n          url.host = url.hostname + ':' + value;\n        }\n\n        break;\n\n      case 'hostname':\n        url[part] = value;\n\n        if (url.port) {\n          value += ':' + url.port;\n        }\n\n        url.host = value;\n        break;\n\n      case 'host':\n        url[part] = value;\n\n        if (/:\\d+$/.test(value)) {\n          value = value.split(':');\n          url.port = value.pop();\n          url.hostname = value.join(':');\n        } else {\n          url.hostname = value;\n          url.port = '';\n        }\n\n        break;\n\n      case 'protocol':\n        url.protocol = value.toLowerCase();\n        url.slashes = !fn;\n        break;\n\n      case 'pathname':\n      case 'hash':\n        if (value) {\n          var char = part === 'pathname' ? '/' : '#';\n          url[part] = value.charAt(0) !== char ? char + value : value;\n        } else {\n          url[part] = value;\n        }\n\n        break;\n\n      default:\n        url[part] = value;\n    }\n\n    for (var i = 0; i < rules.length; i++) {\n      var ins = rules[i];\n\n      if (ins[4]) {\n        url[ins[1]] = url[ins[1]].toLowerCase();\n      }\n    }\n\n    url.origin = url.protocol !== 'file:' && isSpecial(url.protocol) && url.host ? url.protocol + '//' + url.host : 'null';\n    url.href = url.toString();\n    return url;\n  }\n  /**\n   * Transform the properties back in to a valid and full URL string.\n   *\n   * @param {Function} stringify Optional query stringify function.\n   * @returns {String} Compiled version of the URL.\n   * @public\n   */\n\n\n  function toString(stringify) {\n    if (!stringify || 'function' !== typeof stringify) {\n      stringify = querystringify_1.stringify;\n    }\n\n    var query,\n        url = this,\n        protocol = url.protocol;\n\n    if (protocol && protocol.charAt(protocol.length - 1) !== ':') {\n      protocol += ':';\n    }\n\n    var result = protocol + (url.slashes || isSpecial(url.protocol) ? '//' : '');\n\n    if (url.username) {\n      result += url.username;\n\n      if (url.password) {\n        result += ':' + url.password;\n      }\n\n      result += '@';\n    }\n\n    result += url.host + url.pathname;\n    query = 'object' === typeof url.query ? stringify(url.query) : url.query;\n\n    if (query) {\n      result += '?' !== query.charAt(0) ? '?' + query : query;\n    }\n\n    if (url.hash) {\n      result += url.hash;\n    }\n\n    return result;\n  }\n\n  Url.prototype = {\n    set: set,\n    toString: toString\n  }; //\n  // Expose the URL parser and some additional properties that might be useful for\n  // others or testing.\n  //\n\n  Url.extractProtocol = extractProtocol;\n  Url.location = lolcation;\n  Url.trimLeft = trimLeft;\n  Url.qs = querystringify_1;\n  var urlParse = Url;\n  /*\n   * This delay allows the thread to finish assigning its on* methods\n   * before invoking the delay callback. This is purely a timing hack.\n   * http://geekabyte.blogspot.com/2014/01/javascript-effect-of-setting-settimeout.html\n   *\n   * @param {callback: function} the callback which will be invoked after the timeout\n   * @parma {context: object} the context in which to invoke the function\n   */\n\n  function delay(callback, context) {\n    setTimeout(function (timeoutContext) {\n      return callback.call(timeoutContext);\n    }, 4, context);\n  }\n\n  function log(method, message) {\n    /* eslint-disable no-console */\n    if (typeof process !== 'undefined' && process.env.NODE_ENV !== 'test') {\n      console[method].call(null, message);\n    }\n    /* eslint-enable no-console */\n\n  }\n\n  function reject(array, callback) {\n    if (array === void 0) array = [];\n    var results = [];\n    array.forEach(function (itemInArray) {\n      if (!callback(itemInArray)) {\n        results.push(itemInArray);\n      }\n    });\n    return results;\n  }\n\n  function filter(array, callback) {\n    if (array === void 0) array = [];\n    var results = [];\n    array.forEach(function (itemInArray) {\n      if (callback(itemInArray)) {\n        results.push(itemInArray);\n      }\n    });\n    return results;\n  }\n  /*\n   * EventTarget is an interface implemented by objects that can\n   * receive events and may have listeners for them.\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget\n   */\n\n\n  var EventTarget = function EventTarget() {\n    this.listeners = {};\n  };\n  /*\n   * Ties a listener function to an event type which can later be invoked via the\n   * dispatchEvent method.\n   *\n   * @param {string} type - the type of event (ie: 'open', 'message', etc.)\n   * @param {function} listener - callback function to invoke when an event is dispatched matching the type\n   * @param {boolean} useCapture - N/A TODO: implement useCapture functionality\n   */\n\n\n  EventTarget.prototype.addEventListener = function addEventListener(type, listener\n  /* , useCapture */\n  ) {\n    if (typeof listener === 'function') {\n      if (!Array.isArray(this.listeners[type])) {\n        this.listeners[type] = [];\n      } // Only add the same function once\n\n\n      if (filter(this.listeners[type], function (item) {\n        return item === listener;\n      }).length === 0) {\n        this.listeners[type].push(listener);\n      }\n    }\n  };\n  /*\n   * Removes the listener so it will no longer be invoked via the dispatchEvent method.\n   *\n   * @param {string} type - the type of event (ie: 'open', 'message', etc.)\n   * @param {function} listener - callback function to invoke when an event is dispatched matching the type\n   * @param {boolean} useCapture - N/A TODO: implement useCapture functionality\n   */\n\n\n  EventTarget.prototype.removeEventListener = function removeEventListener(type, removingListener\n  /* , useCapture */\n  ) {\n    var arrayOfListeners = this.listeners[type];\n    this.listeners[type] = reject(arrayOfListeners, function (listener) {\n      return listener === removingListener;\n    });\n  };\n  /*\n   * Invokes all listener functions that are listening to the given event.type property. Each\n   * listener will be passed the event as the first argument.\n   *\n   * @param {object} event - event object which will be passed to all listeners of the event.type property\n   */\n\n\n  EventTarget.prototype.dispatchEvent = function dispatchEvent(event) {\n    var this$1 = this;\n    var customArguments = [],\n        len = arguments.length - 1;\n\n    while (len-- > 0) customArguments[len] = arguments[len + 1];\n\n    var eventName = event.type;\n    var listeners = this.listeners[eventName];\n\n    if (!Array.isArray(listeners)) {\n      return false;\n    }\n\n    listeners.forEach(function (listener) {\n      if (customArguments.length > 0) {\n        listener.apply(this$1, customArguments);\n      } else {\n        listener.call(this$1, event);\n      }\n    });\n    return true;\n  };\n\n  function trimQueryPartFromURL(url) {\n    var queryIndex = url.indexOf('?');\n    return queryIndex >= 0 ? url.slice(0, queryIndex) : url;\n  }\n  /*\n   * The network bridge is a way for the mock websocket object to 'communicate' with\n   * all available servers. This is a singleton object so it is important that you\n   * clean up urlMap whenever you are finished.\n   */\n\n\n  var NetworkBridge = function NetworkBridge() {\n    this.urlMap = {};\n  };\n  /*\n   * Attaches a websocket object to the urlMap hash so that it can find the server\n   * it is connected to and the server in turn can find it.\n   *\n   * @param {object} websocket - websocket object to add to the urlMap hash\n   * @param {string} url\n   */\n\n\n  NetworkBridge.prototype.attachWebSocket = function attachWebSocket(websocket, url) {\n    var serverURL = trimQueryPartFromURL(url);\n    var connectionLookup = this.urlMap[serverURL];\n\n    if (connectionLookup && connectionLookup.server && connectionLookup.websockets.indexOf(websocket) === -1) {\n      connectionLookup.websockets.push(websocket);\n      return connectionLookup.server;\n    }\n  };\n  /*\n   * Attaches a websocket to a room\n   */\n\n\n  NetworkBridge.prototype.addMembershipToRoom = function addMembershipToRoom(websocket, room) {\n    var connectionLookup = this.urlMap[trimQueryPartFromURL(websocket.url)];\n\n    if (connectionLookup && connectionLookup.server && connectionLookup.websockets.indexOf(websocket) !== -1) {\n      if (!connectionLookup.roomMemberships[room]) {\n        connectionLookup.roomMemberships[room] = [];\n      }\n\n      connectionLookup.roomMemberships[room].push(websocket);\n    }\n  };\n  /*\n   * Attaches a server object to the urlMap hash so that it can find a websockets\n   * which are connected to it and so that websockets can in turn can find it.\n   *\n   * @param {object} server - server object to add to the urlMap hash\n   * @param {string} url\n   */\n\n\n  NetworkBridge.prototype.attachServer = function attachServer(server, url) {\n    var connectionLookup = this.urlMap[url];\n\n    if (!connectionLookup) {\n      this.urlMap[url] = {\n        server: server,\n        websockets: [],\n        roomMemberships: {}\n      };\n      return server;\n    }\n  };\n  /*\n   * Finds the server which is 'running' on the given url.\n   *\n   * @param {string} url - the url to use to find which server is running on it\n   */\n\n\n  NetworkBridge.prototype.serverLookup = function serverLookup(url) {\n    var serverURL = trimQueryPartFromURL(url);\n    var connectionLookup = this.urlMap[serverURL];\n\n    if (connectionLookup) {\n      return connectionLookup.server;\n    }\n  };\n  /*\n   * Finds all websockets which is 'listening' on the given url.\n   *\n   * @param {string} url - the url to use to find all websockets which are associated with it\n   * @param {string} room - if a room is provided, will only return sockets in this room\n   * @param {class} broadcaster - socket that is broadcasting and is to be excluded from the lookup\n   */\n\n\n  NetworkBridge.prototype.websocketsLookup = function websocketsLookup(url, room, broadcaster) {\n    var serverURL = trimQueryPartFromURL(url);\n    var websockets;\n    var connectionLookup = this.urlMap[serverURL];\n    websockets = connectionLookup ? connectionLookup.websockets : [];\n\n    if (room) {\n      var members = connectionLookup.roomMemberships[room];\n      websockets = members || [];\n    }\n\n    return broadcaster ? websockets.filter(function (websocket) {\n      return websocket !== broadcaster;\n    }) : websockets;\n  };\n  /*\n   * Removes the entry associated with the url.\n   *\n   * @param {string} url\n   */\n\n\n  NetworkBridge.prototype.removeServer = function removeServer(url) {\n    delete this.urlMap[trimQueryPartFromURL(url)];\n  };\n  /*\n   * Removes the individual websocket from the map of associated websockets.\n   *\n   * @param {object} websocket - websocket object to remove from the url map\n   * @param {string} url\n   */\n\n\n  NetworkBridge.prototype.removeWebSocket = function removeWebSocket(websocket, url) {\n    var serverURL = trimQueryPartFromURL(url);\n    var connectionLookup = this.urlMap[serverURL];\n\n    if (connectionLookup) {\n      connectionLookup.websockets = reject(connectionLookup.websockets, function (socket) {\n        return socket === websocket;\n      });\n    }\n  };\n  /*\n   * Removes a websocket from a room\n   */\n\n\n  NetworkBridge.prototype.removeMembershipFromRoom = function removeMembershipFromRoom(websocket, room) {\n    var connectionLookup = this.urlMap[trimQueryPartFromURL(websocket.url)];\n    var memberships = connectionLookup.roomMemberships[room];\n\n    if (connectionLookup && memberships !== null) {\n      connectionLookup.roomMemberships[room] = reject(memberships, function (socket) {\n        return socket === websocket;\n      });\n    }\n  };\n\n  var networkBridge = new NetworkBridge(); // Note: this is a singleton\n\n  /*\n   * https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent\n   */\n\n  var CLOSE_CODES = {\n    CLOSE_NORMAL: 1000,\n    CLOSE_GOING_AWAY: 1001,\n    CLOSE_PROTOCOL_ERROR: 1002,\n    CLOSE_UNSUPPORTED: 1003,\n    CLOSE_NO_STATUS: 1005,\n    CLOSE_ABNORMAL: 1006,\n    UNSUPPORTED_DATA: 1007,\n    POLICY_VIOLATION: 1008,\n    CLOSE_TOO_LARGE: 1009,\n    MISSING_EXTENSION: 1010,\n    INTERNAL_ERROR: 1011,\n    SERVICE_RESTART: 1012,\n    TRY_AGAIN_LATER: 1013,\n    TLS_HANDSHAKE: 1015\n  };\n  var ERROR_PREFIX = {\n    CONSTRUCTOR_ERROR: \"Failed to construct 'WebSocket':\",\n    CLOSE_ERROR: \"Failed to execute 'close' on 'WebSocket':\",\n    EVENT: {\n      CONSTRUCT: \"Failed to construct 'Event':\",\n      MESSAGE: \"Failed to construct 'MessageEvent':\",\n      CLOSE: \"Failed to construct 'CloseEvent':\"\n    }\n  };\n\n  var EventPrototype = function EventPrototype() {};\n\n  EventPrototype.prototype.stopPropagation = function stopPropagation() {};\n\n  EventPrototype.prototype.stopImmediatePropagation = function stopImmediatePropagation() {}; // if no arguments are passed then the type is set to \"undefined\" on\n  // chrome and safari.\n\n\n  EventPrototype.prototype.initEvent = function initEvent(type, bubbles, cancelable) {\n    if (type === void 0) type = 'undefined';\n    if (bubbles === void 0) bubbles = false;\n    if (cancelable === void 0) cancelable = false;\n    this.type = \"\" + type;\n    this.bubbles = Boolean(bubbles);\n    this.cancelable = Boolean(cancelable);\n  };\n\n  var Event = function (EventPrototype$$1) {\n    function Event(type, eventInitConfig) {\n      if (eventInitConfig === void 0) eventInitConfig = {};\n      EventPrototype$$1.call(this);\n\n      if (!type) {\n        throw new TypeError(ERROR_PREFIX.EVENT_ERROR + \" 1 argument required, but only 0 present.\");\n      }\n\n      if (typeof eventInitConfig !== 'object') {\n        throw new TypeError(ERROR_PREFIX.EVENT_ERROR + \" parameter 2 ('eventInitDict') is not an object.\");\n      }\n\n      var bubbles = eventInitConfig.bubbles;\n      var cancelable = eventInitConfig.cancelable;\n      this.type = \"\" + type;\n      this.timeStamp = Date.now();\n      this.target = null;\n      this.srcElement = null;\n      this.returnValue = true;\n      this.isTrusted = false;\n      this.eventPhase = 0;\n      this.defaultPrevented = false;\n      this.currentTarget = null;\n      this.cancelable = cancelable ? Boolean(cancelable) : false;\n      this.canncelBubble = false;\n      this.bubbles = bubbles ? Boolean(bubbles) : false;\n    }\n\n    if (EventPrototype$$1) Event.__proto__ = EventPrototype$$1;\n    Event.prototype = Object.create(EventPrototype$$1 && EventPrototype$$1.prototype);\n    Event.prototype.constructor = Event;\n    return Event;\n  }(EventPrototype);\n\n  var MessageEvent = function (EventPrototype$$1) {\n    function MessageEvent(type, eventInitConfig) {\n      if (eventInitConfig === void 0) eventInitConfig = {};\n      EventPrototype$$1.call(this);\n\n      if (!type) {\n        throw new TypeError(ERROR_PREFIX.EVENT.MESSAGE + \" 1 argument required, but only 0 present.\");\n      }\n\n      if (typeof eventInitConfig !== 'object') {\n        throw new TypeError(ERROR_PREFIX.EVENT.MESSAGE + \" parameter 2 ('eventInitDict') is not an object\");\n      }\n\n      var bubbles = eventInitConfig.bubbles;\n      var cancelable = eventInitConfig.cancelable;\n      var data = eventInitConfig.data;\n      var origin = eventInitConfig.origin;\n      var lastEventId = eventInitConfig.lastEventId;\n      var ports = eventInitConfig.ports;\n      this.type = \"\" + type;\n      this.timeStamp = Date.now();\n      this.target = null;\n      this.srcElement = null;\n      this.returnValue = true;\n      this.isTrusted = false;\n      this.eventPhase = 0;\n      this.defaultPrevented = false;\n      this.currentTarget = null;\n      this.cancelable = cancelable ? Boolean(cancelable) : false;\n      this.canncelBubble = false;\n      this.bubbles = bubbles ? Boolean(bubbles) : false;\n      this.origin = \"\" + origin;\n      this.ports = typeof ports === 'undefined' ? null : ports;\n      this.data = typeof data === 'undefined' ? null : data;\n      this.lastEventId = \"\" + (lastEventId || '');\n    }\n\n    if (EventPrototype$$1) MessageEvent.__proto__ = EventPrototype$$1;\n    MessageEvent.prototype = Object.create(EventPrototype$$1 && EventPrototype$$1.prototype);\n    MessageEvent.prototype.constructor = MessageEvent;\n    return MessageEvent;\n  }(EventPrototype);\n\n  var CloseEvent = function (EventPrototype$$1) {\n    function CloseEvent(type, eventInitConfig) {\n      if (eventInitConfig === void 0) eventInitConfig = {};\n      EventPrototype$$1.call(this);\n\n      if (!type) {\n        throw new TypeError(ERROR_PREFIX.EVENT.CLOSE + \" 1 argument required, but only 0 present.\");\n      }\n\n      if (typeof eventInitConfig !== 'object') {\n        throw new TypeError(ERROR_PREFIX.EVENT.CLOSE + \" parameter 2 ('eventInitDict') is not an object\");\n      }\n\n      var bubbles = eventInitConfig.bubbles;\n      var cancelable = eventInitConfig.cancelable;\n      var code = eventInitConfig.code;\n      var reason = eventInitConfig.reason;\n      var wasClean = eventInitConfig.wasClean;\n      this.type = \"\" + type;\n      this.timeStamp = Date.now();\n      this.target = null;\n      this.srcElement = null;\n      this.returnValue = true;\n      this.isTrusted = false;\n      this.eventPhase = 0;\n      this.defaultPrevented = false;\n      this.currentTarget = null;\n      this.cancelable = cancelable ? Boolean(cancelable) : false;\n      this.cancelBubble = false;\n      this.bubbles = bubbles ? Boolean(bubbles) : false;\n      this.code = typeof code === 'number' ? parseInt(code, 10) : 0;\n      this.reason = \"\" + (reason || '');\n      this.wasClean = wasClean ? Boolean(wasClean) : false;\n    }\n\n    if (EventPrototype$$1) CloseEvent.__proto__ = EventPrototype$$1;\n    CloseEvent.prototype = Object.create(EventPrototype$$1 && EventPrototype$$1.prototype);\n    CloseEvent.prototype.constructor = CloseEvent;\n    return CloseEvent;\n  }(EventPrototype);\n  /*\n   * Creates an Event object and extends it to allow full modification of\n   * its properties.\n   *\n   * @param {object} config - within config you will need to pass type and optionally target\n   */\n\n\n  function createEvent(config) {\n    var type = config.type;\n    var target = config.target;\n    var eventObject = new Event(type);\n\n    if (target) {\n      eventObject.target = target;\n      eventObject.srcElement = target;\n      eventObject.currentTarget = target;\n    }\n\n    return eventObject;\n  }\n  /*\n   * Creates a MessageEvent object and extends it to allow full modification of\n   * its properties.\n   *\n   * @param {object} config - within config: type, origin, data and optionally target\n   */\n\n\n  function createMessageEvent(config) {\n    var type = config.type;\n    var origin = config.origin;\n    var data = config.data;\n    var target = config.target;\n    var messageEvent = new MessageEvent(type, {\n      data: data,\n      origin: origin\n    });\n\n    if (target) {\n      messageEvent.target = target;\n      messageEvent.srcElement = target;\n      messageEvent.currentTarget = target;\n    }\n\n    return messageEvent;\n  }\n  /*\n   * Creates a CloseEvent object and extends it to allow full modification of\n   * its properties.\n   *\n   * @param {object} config - within config: type and optionally target, code, and reason\n   */\n\n\n  function createCloseEvent(config) {\n    var code = config.code;\n    var reason = config.reason;\n    var type = config.type;\n    var target = config.target;\n    var wasClean = config.wasClean;\n\n    if (!wasClean) {\n      wasClean = code === 1000;\n    }\n\n    var closeEvent = new CloseEvent(type, {\n      code: code,\n      reason: reason,\n      wasClean: wasClean\n    });\n\n    if (target) {\n      closeEvent.target = target;\n      closeEvent.srcElement = target;\n      closeEvent.currentTarget = target;\n    }\n\n    return closeEvent;\n  }\n\n  function closeWebSocketConnection(context, code, reason) {\n    context.readyState = WebSocket$1.CLOSING;\n    var server = networkBridge.serverLookup(context.url);\n    var closeEvent = createCloseEvent({\n      type: 'close',\n      target: context,\n      code: code,\n      reason: reason\n    });\n    delay(function () {\n      networkBridge.removeWebSocket(context, context.url);\n      context.readyState = WebSocket$1.CLOSED;\n      context.dispatchEvent(closeEvent);\n\n      if (server) {\n        server.dispatchEvent(closeEvent, server);\n      }\n    }, context);\n  }\n\n  function failWebSocketConnection(context, code, reason) {\n    context.readyState = WebSocket$1.CLOSING;\n    var server = networkBridge.serverLookup(context.url);\n    var closeEvent = createCloseEvent({\n      type: 'close',\n      target: context,\n      code: code,\n      reason: reason,\n      wasClean: false\n    });\n    var errorEvent = createEvent({\n      type: 'error',\n      target: context\n    });\n    delay(function () {\n      networkBridge.removeWebSocket(context, context.url);\n      context.readyState = WebSocket$1.CLOSED;\n      context.dispatchEvent(errorEvent);\n      context.dispatchEvent(closeEvent);\n\n      if (server) {\n        server.dispatchEvent(closeEvent, server);\n      }\n    }, context);\n  }\n\n  function normalizeSendData(data) {\n    if (Object.prototype.toString.call(data) !== '[object Blob]' && !(data instanceof ArrayBuffer)) {\n      data = String(data);\n    }\n\n    return data;\n  }\n\n  function proxyFactory(target) {\n    var handler = {\n      get: function get(obj, prop) {\n        if (prop === 'close') {\n          return function close(options) {\n            if (options === void 0) options = {};\n            var code = options.code || CLOSE_CODES.CLOSE_NORMAL;\n            var reason = options.reason || '';\n            closeWebSocketConnection(target, code, reason);\n          };\n        }\n\n        if (prop === 'send') {\n          return function send(data) {\n            data = normalizeSendData(data);\n            target.dispatchEvent(createMessageEvent({\n              type: 'message',\n              data: data,\n              origin: this.url,\n              target: target\n            }));\n          };\n        }\n\n        if (prop === 'on') {\n          return function onWrapper(type, cb) {\n            target.addEventListener(\"server::\" + type, cb);\n          };\n        }\n\n        return obj[prop];\n      }\n    };\n    var proxy = new Proxy(target, handler);\n    return proxy;\n  }\n\n  function lengthInUtf8Bytes(str) {\n    // Matches only the 10.. bytes that are non-initial characters in a multi-byte sequence.\n    var m = encodeURIComponent(str).match(/%[89ABab]/g);\n    return str.length + (m ? m.length : 0);\n  }\n\n  function urlVerification(url) {\n    var urlRecord = new urlParse(url);\n    var pathname = urlRecord.pathname;\n    var protocol = urlRecord.protocol;\n    var hash = urlRecord.hash;\n\n    if (!url) {\n      throw new TypeError(ERROR_PREFIX.CONSTRUCTOR_ERROR + \" 1 argument required, but only 0 present.\");\n    }\n\n    if (!pathname) {\n      urlRecord.pathname = '/';\n    }\n\n    if (protocol === '') {\n      throw new SyntaxError(ERROR_PREFIX.CONSTRUCTOR_ERROR + \" The URL '\" + urlRecord.toString() + \"' is invalid.\");\n    }\n\n    if (protocol !== 'ws:' && protocol !== 'wss:') {\n      throw new SyntaxError(ERROR_PREFIX.CONSTRUCTOR_ERROR + \" The URL's scheme must be either 'ws' or 'wss'. '\" + protocol + \"' is not allowed.\");\n    }\n\n    if (hash !== '') {\n      /* eslint-disable max-len */\n      throw new SyntaxError(ERROR_PREFIX.CONSTRUCTOR_ERROR + \" The URL contains a fragment identifier ('\" + hash + \"'). Fragment identifiers are not allowed in WebSocket URLs.\");\n      /* eslint-enable max-len */\n    }\n\n    return urlRecord.toString();\n  }\n\n  function protocolVerification(protocols) {\n    if (protocols === void 0) protocols = [];\n\n    if (!Array.isArray(protocols) && typeof protocols !== 'string') {\n      throw new SyntaxError(ERROR_PREFIX.CONSTRUCTOR_ERROR + \" The subprotocol '\" + protocols.toString() + \"' is invalid.\");\n    }\n\n    if (typeof protocols === 'string') {\n      protocols = [protocols];\n    }\n\n    var uniq = protocols.map(function (p) {\n      return {\n        count: 1,\n        protocol: p\n      };\n    }).reduce(function (a, b) {\n      a[b.protocol] = (a[b.protocol] || 0) + b.count;\n      return a;\n    }, {});\n    var duplicates = Object.keys(uniq).filter(function (a) {\n      return uniq[a] > 1;\n    });\n\n    if (duplicates.length > 0) {\n      throw new SyntaxError(ERROR_PREFIX.CONSTRUCTOR_ERROR + \" The subprotocol '\" + duplicates[0] + \"' is duplicated.\");\n    }\n\n    return protocols;\n  }\n  /*\n   * The main websocket class which is designed to mimick the native WebSocket class as close\n   * as possible.\n   *\n   * https://html.spec.whatwg.org/multipage/web-sockets.html\n   */\n\n\n  var WebSocket$1 = function (EventTarget$$1) {\n    function WebSocket(url, protocols) {\n      EventTarget$$1.call(this);\n      this.url = urlVerification(url);\n      protocols = protocolVerification(protocols);\n      this.protocol = protocols[0] || '';\n      this.binaryType = 'blob';\n      this.readyState = WebSocket.CONNECTING;\n      var server = networkBridge.attachWebSocket(this, this.url);\n      /*\n       * This delay is needed so that we dont trigger an event before the callbacks have been\n       * setup. For example:\n       *\n       * var socket = new WebSocket('ws://localhost');\n       *\n       * If we dont have the delay then the event would be triggered right here and this is\n       * before the onopen had a chance to register itself.\n       *\n       * socket.onopen = () => { // this would never be called };\n       *\n       * and with the delay the event gets triggered here after all of the callbacks have been\n       * registered :-)\n       */\n\n      delay(function delayCallback() {\n        if (server) {\n          if (server.options.verifyClient && typeof server.options.verifyClient === 'function' && !server.options.verifyClient()) {\n            this.readyState = WebSocket.CLOSED;\n            log('error', \"WebSocket connection to '\" + this.url + \"' failed: HTTP Authentication failed; no valid credentials available\");\n            networkBridge.removeWebSocket(this, this.url);\n            this.dispatchEvent(createEvent({\n              type: 'error',\n              target: this\n            }));\n            this.dispatchEvent(createCloseEvent({\n              type: 'close',\n              target: this,\n              code: CLOSE_CODES.CLOSE_NORMAL\n            }));\n          } else {\n            if (server.options.selectProtocol && typeof server.options.selectProtocol === 'function') {\n              var selectedProtocol = server.options.selectProtocol(protocols);\n              var isFilled = selectedProtocol !== '';\n              var isRequested = protocols.indexOf(selectedProtocol) !== -1;\n\n              if (isFilled && !isRequested) {\n                this.readyState = WebSocket.CLOSED;\n                log('error', \"WebSocket connection to '\" + this.url + \"' failed: Invalid Sub-Protocol\");\n                networkBridge.removeWebSocket(this, this.url);\n                this.dispatchEvent(createEvent({\n                  type: 'error',\n                  target: this\n                }));\n                this.dispatchEvent(createCloseEvent({\n                  type: 'close',\n                  target: this,\n                  code: CLOSE_CODES.CLOSE_NORMAL\n                }));\n                return;\n              }\n\n              this.protocol = selectedProtocol;\n            }\n\n            this.readyState = WebSocket.OPEN;\n            this.dispatchEvent(createEvent({\n              type: 'open',\n              target: this\n            }));\n            server.dispatchEvent(createEvent({\n              type: 'connection'\n            }), proxyFactory(this));\n          }\n        } else {\n          this.readyState = WebSocket.CLOSED;\n          this.dispatchEvent(createEvent({\n            type: 'error',\n            target: this\n          }));\n          this.dispatchEvent(createCloseEvent({\n            type: 'close',\n            target: this,\n            code: CLOSE_CODES.CLOSE_NORMAL\n          }));\n          log('error', \"WebSocket connection to '\" + this.url + \"' failed\");\n        }\n      }, this);\n    }\n\n    if (EventTarget$$1) WebSocket.__proto__ = EventTarget$$1;\n    WebSocket.prototype = Object.create(EventTarget$$1 && EventTarget$$1.prototype);\n    WebSocket.prototype.constructor = WebSocket;\n    var prototypeAccessors = {\n      onopen: {},\n      onmessage: {},\n      onclose: {},\n      onerror: {}\n    };\n\n    prototypeAccessors.onopen.get = function () {\n      return this.listeners.open;\n    };\n\n    prototypeAccessors.onmessage.get = function () {\n      return this.listeners.message;\n    };\n\n    prototypeAccessors.onclose.get = function () {\n      return this.listeners.close;\n    };\n\n    prototypeAccessors.onerror.get = function () {\n      return this.listeners.error;\n    };\n\n    prototypeAccessors.onopen.set = function (listener) {\n      delete this.listeners.open;\n      this.addEventListener('open', listener);\n    };\n\n    prototypeAccessors.onmessage.set = function (listener) {\n      delete this.listeners.message;\n      this.addEventListener('message', listener);\n    };\n\n    prototypeAccessors.onclose.set = function (listener) {\n      delete this.listeners.close;\n      this.addEventListener('close', listener);\n    };\n\n    prototypeAccessors.onerror.set = function (listener) {\n      delete this.listeners.error;\n      this.addEventListener('error', listener);\n    };\n\n    WebSocket.prototype.send = function send(data) {\n      var this$1 = this;\n\n      if (this.readyState === WebSocket.CLOSING || this.readyState === WebSocket.CLOSED) {\n        throw new Error('WebSocket is already in CLOSING or CLOSED state');\n      } // TODO: handle bufferedAmount\n\n\n      var messageEvent = createMessageEvent({\n        type: 'server::message',\n        origin: this.url,\n        data: normalizeSendData(data)\n      });\n      var server = networkBridge.serverLookup(this.url);\n\n      if (server) {\n        delay(function () {\n          this$1.dispatchEvent(messageEvent, data);\n        }, server);\n      }\n    };\n\n    WebSocket.prototype.close = function close(code, reason) {\n      if (code !== undefined) {\n        if (typeof code !== 'number' || code !== 1000 && (code < 3000 || code > 4999)) {\n          throw new TypeError(ERROR_PREFIX.CLOSE_ERROR + \" The code must be either 1000, or between 3000 and 4999. \" + code + \" is neither.\");\n        }\n      }\n\n      if (reason !== undefined) {\n        var length = lengthInUtf8Bytes(reason);\n\n        if (length > 123) {\n          throw new SyntaxError(ERROR_PREFIX.CLOSE_ERROR + \" The message must not be greater than 123 bytes.\");\n        }\n      }\n\n      if (this.readyState === WebSocket.CLOSING || this.readyState === WebSocket.CLOSED) {\n        return;\n      }\n\n      if (this.readyState === WebSocket.CONNECTING) {\n        failWebSocketConnection(this, code, reason);\n      } else {\n        closeWebSocketConnection(this, code, reason);\n      }\n    };\n\n    Object.defineProperties(WebSocket.prototype, prototypeAccessors);\n    return WebSocket;\n  }(EventTarget);\n\n  WebSocket$1.CONNECTING = 0;\n  WebSocket$1.prototype.CONNECTING = WebSocket$1.CONNECTING;\n  WebSocket$1.OPEN = 1;\n  WebSocket$1.prototype.OPEN = WebSocket$1.OPEN;\n  WebSocket$1.CLOSING = 2;\n  WebSocket$1.prototype.CLOSING = WebSocket$1.CLOSING;\n  WebSocket$1.CLOSED = 3;\n  WebSocket$1.prototype.CLOSED = WebSocket$1.CLOSED;\n\n  var dedupe = function (arr) {\n    return arr.reduce(function (deduped, b) {\n      if (deduped.indexOf(b) > -1) {\n        return deduped;\n      }\n\n      return deduped.concat(b);\n    }, []);\n  };\n\n  function retrieveGlobalObject() {\n    if (typeof window !== 'undefined') {\n      return window;\n    }\n\n    return typeof process === 'object' && typeof require === 'function' && typeof global === 'object' ? global : this;\n  }\n\n  var Server$1 = function (EventTarget$$1) {\n    function Server(url, options) {\n      if (options === void 0) options = {};\n      EventTarget$$1.call(this);\n      var urlRecord = new urlParse(url);\n\n      if (!urlRecord.pathname) {\n        urlRecord.pathname = '/';\n      }\n\n      this.url = urlRecord.toString();\n      this.originalWebSocket = null;\n      var server = networkBridge.attachServer(this, this.url);\n\n      if (!server) {\n        this.dispatchEvent(createEvent({\n          type: 'error'\n        }));\n        throw new Error('A mock server is already listening on this url');\n      }\n\n      if (typeof options.verifyClient === 'undefined') {\n        options.verifyClient = null;\n      }\n\n      if (typeof options.selectProtocol === 'undefined') {\n        options.selectProtocol = null;\n      }\n\n      this.options = options;\n      this.start();\n    }\n\n    if (EventTarget$$1) Server.__proto__ = EventTarget$$1;\n    Server.prototype = Object.create(EventTarget$$1 && EventTarget$$1.prototype);\n    Server.prototype.constructor = Server;\n    /*\n     * Attaches the mock websocket object to the global object\n     */\n\n    Server.prototype.start = function start() {\n      var globalObj = retrieveGlobalObject();\n\n      if (globalObj.WebSocket) {\n        this.originalWebSocket = globalObj.WebSocket;\n      }\n\n      globalObj.WebSocket = WebSocket$1;\n    };\n    /*\n     * Removes the mock websocket object from the global object\n     */\n\n\n    Server.prototype.stop = function stop(callback) {\n      if (callback === void 0) callback = function () {};\n      var globalObj = retrieveGlobalObject();\n\n      if (this.originalWebSocket) {\n        globalObj.WebSocket = this.originalWebSocket;\n      } else {\n        delete globalObj.WebSocket;\n      }\n\n      this.originalWebSocket = null;\n      networkBridge.removeServer(this.url);\n\n      if (typeof callback === 'function') {\n        callback();\n      }\n    };\n    /*\n     * This is the main function for the mock server to subscribe to the on events.\n     *\n     * ie: mockServer.on('connection', function() { console.log('a mock client connected'); });\n     *\n     * @param {string} type - The event key to subscribe to. Valid keys are: connection, message, and close.\n     * @param {function} callback - The callback which should be called when a certain event is fired.\n     */\n\n\n    Server.prototype.on = function on(type, callback) {\n      this.addEventListener(type, callback);\n    };\n    /*\n     * Closes the connection and triggers the onclose method of all listening\n     * websockets. After that it removes itself from the urlMap so another server\n     * could add itself to the url.\n     *\n     * @param {object} options\n     */\n\n\n    Server.prototype.close = function close(options) {\n      if (options === void 0) options = {};\n      var code = options.code;\n      var reason = options.reason;\n      var wasClean = options.wasClean;\n      var listeners = networkBridge.websocketsLookup(this.url); // Remove server before notifications to prevent immediate reconnects from\n      // socket onclose handlers\n\n      networkBridge.removeServer(this.url);\n      listeners.forEach(function (socket) {\n        socket.readyState = WebSocket$1.CLOSED;\n        socket.dispatchEvent(createCloseEvent({\n          type: 'close',\n          target: socket,\n          code: code || CLOSE_CODES.CLOSE_NORMAL,\n          reason: reason || '',\n          wasClean: wasClean\n        }));\n      });\n      this.dispatchEvent(createCloseEvent({\n        type: 'close'\n      }), this);\n    };\n    /*\n     * Sends a generic message event to all mock clients.\n     */\n\n\n    Server.prototype.emit = function emit(event, data, options) {\n      var this$1 = this;\n      if (options === void 0) options = {};\n      var websockets = options.websockets;\n\n      if (!websockets) {\n        websockets = networkBridge.websocketsLookup(this.url);\n      }\n\n      if (typeof options !== 'object' || arguments.length > 3) {\n        data = Array.prototype.slice.call(arguments, 1, arguments.length);\n        data = data.map(function (item) {\n          return normalizeSendData(item);\n        });\n      } else {\n        data = normalizeSendData(data);\n      }\n\n      websockets.forEach(function (socket) {\n        if (Array.isArray(data)) {\n          socket.dispatchEvent.apply(socket, [createMessageEvent({\n            type: event,\n            data: data,\n            origin: this$1.url,\n            target: socket\n          })].concat(data));\n        } else {\n          socket.dispatchEvent(createMessageEvent({\n            type: event,\n            data: data,\n            origin: this$1.url,\n            target: socket\n          }));\n        }\n      });\n    };\n    /*\n     * Returns an array of websockets which are listening to this server\n     * TOOD: this should return a set and not be a method\n     */\n\n\n    Server.prototype.clients = function clients() {\n      return networkBridge.websocketsLookup(this.url);\n    };\n    /*\n     * Prepares a method to submit an event to members of the room\n     *\n     * e.g. server.to('my-room').emit('hi!');\n     */\n\n\n    Server.prototype.to = function to(room, broadcaster, broadcastList) {\n      var this$1 = this;\n      if (broadcastList === void 0) broadcastList = [];\n      var self = this;\n      var websockets = dedupe(broadcastList.concat(networkBridge.websocketsLookup(this.url, room, broadcaster)));\n      return {\n        to: function (chainedRoom, chainedBroadcaster) {\n          return this$1.to.call(this$1, chainedRoom, chainedBroadcaster, websockets);\n        },\n        emit: function emit(event, data) {\n          self.emit(event, data, {\n            websockets: websockets\n          });\n        }\n      };\n    };\n    /*\n     * Alias for Server.to\n     */\n\n\n    Server.prototype.in = function in$1() {\n      var args = [],\n          len = arguments.length;\n\n      while (len--) args[len] = arguments[len];\n\n      return this.to.apply(null, args);\n    };\n    /*\n     * Simulate an event from the server to the clients. Useful for\n     * simulating errors.\n     */\n\n\n    Server.prototype.simulate = function simulate(event) {\n      var listeners = networkBridge.websocketsLookup(this.url);\n\n      if (event === 'error') {\n        listeners.forEach(function (socket) {\n          socket.readyState = WebSocket$1.CLOSED;\n          socket.dispatchEvent(createEvent({\n            type: 'error'\n          }));\n        });\n      }\n    };\n\n    return Server;\n  }(EventTarget);\n  /*\n   * Alternative constructor to support namespaces in socket.io\n   *\n   * http://socket.io/docs/rooms-and-namespaces/#custom-namespaces\n   */\n\n\n  Server$1.of = function of(url) {\n    return new Server$1(url);\n  };\n  /*\n   * The socket-io class is designed to mimick the real API as closely as possible.\n   *\n   * http://socket.io/docs/\n   */\n\n\n  var SocketIO$1 = function (EventTarget$$1) {\n    function SocketIO(url, protocol) {\n      var this$1 = this;\n      if (url === void 0) url = 'socket.io';\n      if (protocol === void 0) protocol = '';\n      EventTarget$$1.call(this);\n      this.binaryType = 'blob';\n      var urlRecord = new urlParse(url);\n\n      if (!urlRecord.pathname) {\n        urlRecord.pathname = '/';\n      }\n\n      this.url = urlRecord.toString();\n      this.readyState = SocketIO.CONNECTING;\n      this.protocol = '';\n\n      if (typeof protocol === 'string' || typeof protocol === 'object' && protocol !== null) {\n        this.protocol = protocol;\n      } else if (Array.isArray(protocol) && protocol.length > 0) {\n        this.protocol = protocol[0];\n      }\n\n      var server = networkBridge.attachWebSocket(this, this.url);\n      /*\n       * Delay triggering the connection events so they can be defined in time.\n       */\n\n      delay(function delayCallback() {\n        if (server) {\n          this.readyState = SocketIO.OPEN;\n          server.dispatchEvent(createEvent({\n            type: 'connection'\n          }), server, this);\n          server.dispatchEvent(createEvent({\n            type: 'connect'\n          }), server, this); // alias\n\n          this.dispatchEvent(createEvent({\n            type: 'connect',\n            target: this\n          }));\n        } else {\n          this.readyState = SocketIO.CLOSED;\n          this.dispatchEvent(createEvent({\n            type: 'error',\n            target: this\n          }));\n          this.dispatchEvent(createCloseEvent({\n            type: 'close',\n            target: this,\n            code: CLOSE_CODES.CLOSE_NORMAL\n          }));\n          log('error', \"Socket.io connection to '\" + this.url + \"' failed\");\n        }\n      }, this);\n      /**\n        Add an aliased event listener for close / disconnect\n       */\n\n      this.addEventListener('close', function (event) {\n        this$1.dispatchEvent(createCloseEvent({\n          type: 'disconnect',\n          target: event.target,\n          code: event.code\n        }));\n      });\n    }\n\n    if (EventTarget$$1) SocketIO.__proto__ = EventTarget$$1;\n    SocketIO.prototype = Object.create(EventTarget$$1 && EventTarget$$1.prototype);\n    SocketIO.prototype.constructor = SocketIO;\n    var prototypeAccessors = {\n      broadcast: {}\n    };\n    /*\n     * Closes the SocketIO connection or connection attempt, if any.\n     * If the connection is already CLOSED, this method does nothing.\n     */\n\n    SocketIO.prototype.close = function close() {\n      if (this.readyState !== SocketIO.OPEN) {\n        return undefined;\n      }\n\n      var server = networkBridge.serverLookup(this.url);\n      networkBridge.removeWebSocket(this, this.url);\n      this.readyState = SocketIO.CLOSED;\n      this.dispatchEvent(createCloseEvent({\n        type: 'close',\n        target: this,\n        code: CLOSE_CODES.CLOSE_NORMAL\n      }));\n\n      if (server) {\n        server.dispatchEvent(createCloseEvent({\n          type: 'disconnect',\n          target: this,\n          code: CLOSE_CODES.CLOSE_NORMAL\n        }), server);\n      }\n\n      return this;\n    };\n    /*\n     * Alias for Socket#close\n     *\n     * https://github.com/socketio/socket.io-client/blob/master/lib/socket.js#L383\n     */\n\n\n    SocketIO.prototype.disconnect = function disconnect() {\n      return this.close();\n    };\n    /*\n     * Submits an event to the server with a payload\n     */\n\n\n    SocketIO.prototype.emit = function emit(event) {\n      var data = [],\n          len = arguments.length - 1;\n\n      while (len-- > 0) data[len] = arguments[len + 1];\n\n      if (this.readyState !== SocketIO.OPEN) {\n        throw new Error('SocketIO is already in CLOSING or CLOSED state');\n      }\n\n      var messageEvent = createMessageEvent({\n        type: event,\n        origin: this.url,\n        data: data\n      });\n      var server = networkBridge.serverLookup(this.url);\n\n      if (server) {\n        server.dispatchEvent.apply(server, [messageEvent].concat(data));\n      }\n\n      return this;\n    };\n    /*\n     * Submits a 'message' event to the server.\n     *\n     * Should behave exactly like WebSocket#send\n     *\n     * https://github.com/socketio/socket.io-client/blob/master/lib/socket.js#L113\n     */\n\n\n    SocketIO.prototype.send = function send(data) {\n      this.emit('message', data);\n      return this;\n    };\n    /*\n     * For broadcasting events to other connected sockets.\n     *\n     * e.g. socket.broadcast.emit('hi!');\n     * e.g. socket.broadcast.to('my-room').emit('hi!');\n     */\n\n\n    prototypeAccessors.broadcast.get = function () {\n      if (this.readyState !== SocketIO.OPEN) {\n        throw new Error('SocketIO is already in CLOSING or CLOSED state');\n      }\n\n      var self = this;\n      var server = networkBridge.serverLookup(this.url);\n\n      if (!server) {\n        throw new Error(\"SocketIO can not find a server at the specified URL (\" + this.url + \")\");\n      }\n\n      return {\n        emit: function emit(event, data) {\n          server.emit(event, data, {\n            websockets: networkBridge.websocketsLookup(self.url, null, self)\n          });\n          return self;\n        },\n        to: function to(room) {\n          return server.to(room, self);\n        },\n        in: function in$1(room) {\n          return server.in(room, self);\n        }\n      };\n    };\n    /*\n     * For registering events to be received from the server\n     */\n\n\n    SocketIO.prototype.on = function on(type, callback) {\n      this.addEventListener(type, callback);\n      return this;\n    };\n    /*\n     * Remove event listener\n     *\n     * https://github.com/component/emitter#emitteroffevent-fn\n     */\n\n\n    SocketIO.prototype.off = function off(type, callback) {\n      this.removeEventListener(type, callback);\n    };\n    /*\n     * Check if listeners have already been added for an event\n     *\n     * https://github.com/component/emitter#emitterhaslistenersevent\n     */\n\n\n    SocketIO.prototype.hasListeners = function hasListeners(type) {\n      var listeners = this.listeners[type];\n\n      if (!Array.isArray(listeners)) {\n        return false;\n      }\n\n      return !!listeners.length;\n    };\n    /*\n     * Join a room on a server\n     *\n     * http://socket.io/docs/rooms-and-namespaces/#joining-and-leaving\n     */\n\n\n    SocketIO.prototype.join = function join(room) {\n      networkBridge.addMembershipToRoom(this, room);\n    };\n    /*\n     * Get the websocket to leave the room\n     *\n     * http://socket.io/docs/rooms-and-namespaces/#joining-and-leaving\n     */\n\n\n    SocketIO.prototype.leave = function leave(room) {\n      networkBridge.removeMembershipFromRoom(this, room);\n    };\n\n    SocketIO.prototype.to = function to(room) {\n      return this.broadcast.to(room);\n    };\n\n    SocketIO.prototype.in = function in$1() {\n      return this.to.apply(null, arguments);\n    };\n    /*\n     * Invokes all listener functions that are listening to the given event.type property. Each\n     * listener will be passed the event as the first argument.\n     *\n     * @param {object} event - event object which will be passed to all listeners of the event.type property\n     */\n\n\n    SocketIO.prototype.dispatchEvent = function dispatchEvent(event) {\n      var this$1 = this;\n      var customArguments = [],\n          len = arguments.length - 1;\n\n      while (len-- > 0) customArguments[len] = arguments[len + 1];\n\n      var eventName = event.type;\n      var listeners = this.listeners[eventName];\n\n      if (!Array.isArray(listeners)) {\n        return false;\n      }\n\n      listeners.forEach(function (listener) {\n        if (customArguments.length > 0) {\n          listener.apply(this$1, customArguments);\n        } else {\n          // Regular WebSockets expect a MessageEvent but Socketio.io just wants raw data\n          //  payload instanceof MessageEvent works, but you can't isntance of NodeEvent\n          //  for now we detect if the output has data defined on it\n          listener.call(this$1, event.data ? event.data : event);\n        }\n      });\n    };\n\n    Object.defineProperties(SocketIO.prototype, prototypeAccessors);\n    return SocketIO;\n  }(EventTarget);\n\n  SocketIO$1.CONNECTING = 0;\n  SocketIO$1.OPEN = 1;\n  SocketIO$1.CLOSING = 2;\n  SocketIO$1.CLOSED = 3;\n  /*\n   * Static constructor methods for the IO Socket\n   */\n\n  var IO = function ioConstructor(url, protocol) {\n    return new SocketIO$1(url, protocol);\n  };\n  /*\n   * Alias the raw IO() constructor\n   */\n\n\n  IO.connect = function ioConnect(url, protocol) {\n    /* eslint-disable new-cap */\n    return IO(url, protocol);\n    /* eslint-enable new-cap */\n  };\n\n  var Server = Server$1;\n  var WebSocket = WebSocket$1;\n  var SocketIO = IO;\n  exports.Server = Server;\n  exports.WebSocket = WebSocket;\n  exports.SocketIO = SocketIO;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});","map":{"version":3,"sources":["../node_modules/requires-port/index.js","../node_modules/querystringify/index.js","../node_modules/url-parse/index.js","../src/helpers/delay.js","../src/helpers/logger.js","../src/helpers/array-helpers.js","../src/event/target.js","../src/network-bridge.js","../src/constants.js","../src/event/prototype.js","../src/event/event.js","../src/event/message.js","../src/event/close.js","../src/event/factory.js","../src/algorithms/close.js","../src/helpers/normalize-send.js","../src/helpers/proxy-factory.js","../src/helpers/byte-length.js","../src/helpers/url-verification.js","../src/helpers/protocol-verification.js","../src/websocket.js","../src/helpers/dedupe.js","../src/helpers/global-object.js","../src/server.js","../src/socket-io.js","../src/index.js"],"names":["global","qs","required","const","this","super","WebSocket","URL","logger","Server","globalObject","SocketIO","MockServer","MockWebSocket","MockSocketIO"],"mappings":"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","sourcesContent":["'use strict';\n\n/**\n * Check if we're required to add a port number.\n *\n * @see https://url.spec.whatwg.org/#default-port\n * @param {Number|String} port Port number we need to check\n * @param {String} protocol Protocol we need to check against.\n * @returns {Boolean} Is it a default port for the given protocol\n * @api private\n */\nmodule.exports = function required(port, protocol) {\n  protocol = protocol.split(':')[0];\n  port = +port;\n\n  if (!port) return false;\n\n  switch (protocol) {\n    case 'http':\n    case 'ws':\n    return port !== 80;\n\n    case 'https':\n    case 'wss':\n    return port !== 443;\n\n    case 'ftp':\n    return port !== 21;\n\n    case 'gopher':\n    return port !== 70;\n\n    case 'file':\n    return false;\n  }\n\n  return port !== 0;\n};\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , undef;\n\n/**\n * Decode a URI encoded string.\n *\n * @param {String} input The URI encoded string.\n * @returns {String|Null} The decoded string.\n * @api private\n */\nfunction decode(input) {\n  try {\n    return decodeURIComponent(input.replace(/\\+/g, ' '));\n  } catch (e) {\n    return null;\n  }\n}\n\n/**\n * Attempts to encode a given input.\n *\n * @param {String} input The string that needs to be encoded.\n * @returns {String|Null} The encoded string.\n * @api private\n */\nfunction encode(input) {\n  try {\n    return encodeURIComponent(input);\n  } catch (e) {\n    return null;\n  }\n}\n\n/**\n * Simple query string parser.\n *\n * @param {String} query The query string that needs to be parsed.\n * @returns {Object}\n * @api public\n */\nfunction querystring(query) {\n  var parser = /([^=?#&]+)=?([^&]*)/g\n    , result = {}\n    , part;\n\n  while (part = parser.exec(query)) {\n    var key = decode(part[1])\n      , value = decode(part[2]);\n\n    //\n    // Prevent overriding of existing properties. This ensures that build-in\n    // methods like `toString` or __proto__ are not overriden by malicious\n    // querystrings.\n    //\n    // In the case if failed decoding, we want to omit the key/value pairs\n    // from the result.\n    //\n    if (key === null || value === null || key in result) continue;\n    result[key] = value;\n  }\n\n  return result;\n}\n\n/**\n * Transform a query string to an object.\n *\n * @param {Object} obj Object that should be transformed.\n * @param {String} prefix Optional prefix.\n * @returns {String}\n * @api public\n */\nfunction querystringify(obj, prefix) {\n  prefix = prefix || '';\n\n  var pairs = []\n    , value\n    , key;\n\n  //\n  // Optionally prefix with a '?' if needed\n  //\n  if ('string' !== typeof prefix) prefix = '?';\n\n  for (key in obj) {\n    if (has.call(obj, key)) {\n      value = obj[key];\n\n      //\n      // Edge cases where we actually want to encode the value to an empty\n      // string instead of the stringified value.\n      //\n      if (!value && (value === null || value === undef || isNaN(value))) {\n        value = '';\n      }\n\n      key = encode(key);\n      value = encode(value);\n\n      //\n      // If we failed to encode the strings, we should bail out as we don't\n      // want to add invalid strings to the query.\n      //\n      if (key === null || value === null) continue;\n      pairs.push(key +'='+ value);\n    }\n  }\n\n  return pairs.length ? prefix + pairs.join('&') : '';\n}\n\n//\n// Expose the module.\n//\nexports.stringify = querystringify;\nexports.parse = querystring;\n","'use strict';\n\nvar required = require('requires-port')\n  , qs = require('querystringify')\n  , slashes = /^[A-Za-z][A-Za-z0-9+-.]*:\\/\\//\n  , protocolre = /^([a-z][a-z0-9.+-]*:)?(\\/\\/)?([\\\\/]+)?([\\S\\s]*)/i\n  , whitespace = '[\\\\x09\\\\x0A\\\\x0B\\\\x0C\\\\x0D\\\\x20\\\\xA0\\\\u1680\\\\u180E\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200A\\\\u202F\\\\u205F\\\\u3000\\\\u2028\\\\u2029\\\\uFEFF]'\n  , left = new RegExp('^'+ whitespace +'+');\n\n/**\n * Trim a given string.\n *\n * @param {String} str String to trim.\n * @public\n */\nfunction trimLeft(str) {\n  return (str ? str : '').toString().replace(left, '');\n}\n\n/**\n * These are the parse rules for the URL parser, it informs the parser\n * about:\n *\n * 0. The char it Needs to parse, if it's a string it should be done using\n *    indexOf, RegExp using exec and NaN means set as current value.\n * 1. The property we should set when parsing this value.\n * 2. Indication if it's backwards or forward parsing, when set as number it's\n *    the value of extra chars that should be split off.\n * 3. Inherit from location if non existing in the parser.\n * 4. `toLowerCase` the resulting value.\n */\nvar rules = [\n  ['#', 'hash'],                        // Extract from the back.\n  ['?', 'query'],                       // Extract from the back.\n  function sanitize(address, url) {     // Sanitize what is left of the address\n    return isSpecial(url.protocol) ? address.replace(/\\\\/g, '/') : address;\n  },\n  ['/', 'pathname'],                    // Extract from the back.\n  ['@', 'auth', 1],                     // Extract from the front.\n  [NaN, 'host', undefined, 1, 1],       // Set left over value.\n  [/:(\\d+)$/, 'port', undefined, 1],    // RegExp the back.\n  [NaN, 'hostname', undefined, 1, 1]    // Set left over.\n];\n\n/**\n * These properties should not be copied or inherited from. This is only needed\n * for all non blob URL's as a blob URL does not include a hash, only the\n * origin.\n *\n * @type {Object}\n * @private\n */\nvar ignore = { hash: 1, query: 1 };\n\n/**\n * The location object differs when your code is loaded through a normal page,\n * Worker or through a worker using a blob. And with the blobble begins the\n * trouble as the location object will contain the URL of the blob, not the\n * location of the page where our code is loaded in. The actual origin is\n * encoded in the `pathname` so we can thankfully generate a good \"default\"\n * location from it so we can generate proper relative URL's again.\n *\n * @param {Object|String} loc Optional default location object.\n * @returns {Object} lolcation object.\n * @public\n */\nfunction lolcation(loc) {\n  var globalVar;\n\n  if (typeof window !== 'undefined') globalVar = window;\n  else if (typeof global !== 'undefined') globalVar = global;\n  else if (typeof self !== 'undefined') globalVar = self;\n  else globalVar = {};\n\n  var location = globalVar.location || {};\n  loc = loc || location;\n\n  var finaldestination = {}\n    , type = typeof loc\n    , key;\n\n  if ('blob:' === loc.protocol) {\n    finaldestination = new Url(unescape(loc.pathname), {});\n  } else if ('string' === type) {\n    finaldestination = new Url(loc, {});\n    for (key in ignore) delete finaldestination[key];\n  } else if ('object' === type) {\n    for (key in loc) {\n      if (key in ignore) continue;\n      finaldestination[key] = loc[key];\n    }\n\n    if (finaldestination.slashes === undefined) {\n      finaldestination.slashes = slashes.test(loc.href);\n    }\n  }\n\n  return finaldestination;\n}\n\n/**\n * Check whether a protocol scheme is special.\n *\n * @param {String} The protocol scheme of the URL\n * @return {Boolean} `true` if the protocol scheme is special, else `false`\n * @private\n */\nfunction isSpecial(scheme) {\n  return (\n    scheme === 'file:' ||\n    scheme === 'ftp:' ||\n    scheme === 'http:' ||\n    scheme === 'https:' ||\n    scheme === 'ws:' ||\n    scheme === 'wss:'\n  );\n}\n\n/**\n * @typedef ProtocolExtract\n * @type Object\n * @property {String} protocol Protocol matched in the URL, in lowercase.\n * @property {Boolean} slashes `true` if protocol is followed by \"//\", else `false`.\n * @property {String} rest Rest of the URL that is not part of the protocol.\n */\n\n/**\n * Extract protocol information from a URL with/without double slash (\"//\").\n *\n * @param {String} address URL we want to extract from.\n * @param {Object} location\n * @return {ProtocolExtract} Extracted information.\n * @private\n */\nfunction extractProtocol(address, location) {\n  address = trimLeft(address);\n  location = location || {};\n\n  var match = protocolre.exec(address);\n  var protocol = match[1] ? match[1].toLowerCase() : '';\n  var forwardSlashes = !!match[2];\n  var otherSlashes = !!match[3];\n  var slashesCount = 0;\n  var rest;\n\n  if (forwardSlashes) {\n    if (otherSlashes) {\n      rest = match[2] + match[3] + match[4];\n      slashesCount = match[2].length + match[3].length;\n    } else {\n      rest = match[2] + match[4];\n      slashesCount = match[2].length;\n    }\n  } else {\n    if (otherSlashes) {\n      rest = match[3] + match[4];\n      slashesCount = match[3].length;\n    } else {\n      rest = match[4]\n    }\n  }\n\n  if (protocol === 'file:') {\n    if (slashesCount >= 2) {\n      rest = rest.slice(2);\n    }\n  } else if (isSpecial(protocol)) {\n    rest = match[4];\n  } else if (protocol) {\n    if (forwardSlashes) {\n      rest = rest.slice(2);\n    }\n  } else if (slashesCount >= 2 && isSpecial(location.protocol)) {\n    rest = match[4];\n  }\n\n  return {\n    protocol: protocol,\n    slashes: forwardSlashes || isSpecial(protocol),\n    slashesCount: slashesCount,\n    rest: rest\n  };\n}\n\n/**\n * Resolve a relative URL pathname against a base URL pathname.\n *\n * @param {String} relative Pathname of the relative URL.\n * @param {String} base Pathname of the base URL.\n * @return {String} Resolved pathname.\n * @private\n */\nfunction resolve(relative, base) {\n  if (relative === '') return base;\n\n  var path = (base || '/').split('/').slice(0, -1).concat(relative.split('/'))\n    , i = path.length\n    , last = path[i - 1]\n    , unshift = false\n    , up = 0;\n\n  while (i--) {\n    if (path[i] === '.') {\n      path.splice(i, 1);\n    } else if (path[i] === '..') {\n      path.splice(i, 1);\n      up++;\n    } else if (up) {\n      if (i === 0) unshift = true;\n      path.splice(i, 1);\n      up--;\n    }\n  }\n\n  if (unshift) path.unshift('');\n  if (last === '.' || last === '..') path.push('');\n\n  return path.join('/');\n}\n\n/**\n * The actual URL instance. Instead of returning an object we've opted-in to\n * create an actual constructor as it's much more memory efficient and\n * faster and it pleases my OCD.\n *\n * It is worth noting that we should not use `URL` as class name to prevent\n * clashes with the global URL instance that got introduced in browsers.\n *\n * @constructor\n * @param {String} address URL we want to parse.\n * @param {Object|String} [location] Location defaults for relative paths.\n * @param {Boolean|Function} [parser] Parser for the query string.\n * @private\n */\nfunction Url(address, location, parser) {\n  address = trimLeft(address);\n\n  if (!(this instanceof Url)) {\n    return new Url(address, location, parser);\n  }\n\n  var relative, extracted, parse, instruction, index, key\n    , instructions = rules.slice()\n    , type = typeof location\n    , url = this\n    , i = 0;\n\n  //\n  // The following if statements allows this module two have compatibility with\n  // 2 different API:\n  //\n  // 1. Node.js's `url.parse` api which accepts a URL, boolean as arguments\n  //    where the boolean indicates that the query string should also be parsed.\n  //\n  // 2. The `URL` interface of the browser which accepts a URL, object as\n  //    arguments. The supplied object will be used as default values / fall-back\n  //    for relative paths.\n  //\n  if ('object' !== type && 'string' !== type) {\n    parser = location;\n    location = null;\n  }\n\n  if (parser && 'function' !== typeof parser) parser = qs.parse;\n\n  location = lolcation(location);\n\n  //\n  // Extract protocol information before running the instructions.\n  //\n  extracted = extractProtocol(address || '', location);\n  relative = !extracted.protocol && !extracted.slashes;\n  url.slashes = extracted.slashes || relative && location.slashes;\n  url.protocol = extracted.protocol || location.protocol || '';\n  address = extracted.rest;\n\n  //\n  // When the authority component is absent the URL starts with a path\n  // component.\n  //\n  if (\n    url.protocol === 'file:' ||\n    (!extracted.slashes &&\n      (extracted.protocol ||\n        extracted.slashesCount < 2 ||\n        !isSpecial(url.protocol)))\n  ) {\n    instructions[3] = [/(.*)/, 'pathname'];\n  }\n\n  for (; i < instructions.length; i++) {\n    instruction = instructions[i];\n\n    if (typeof instruction === 'function') {\n      address = instruction(address, url);\n      continue;\n    }\n\n    parse = instruction[0];\n    key = instruction[1];\n\n    if (parse !== parse) {\n      url[key] = address;\n    } else if ('string' === typeof parse) {\n      if (~(index = address.indexOf(parse))) {\n        if ('number' === typeof instruction[2]) {\n          url[key] = address.slice(0, index);\n          address = address.slice(index + instruction[2]);\n        } else {\n          url[key] = address.slice(index);\n          address = address.slice(0, index);\n        }\n      }\n    } else if ((index = parse.exec(address))) {\n      url[key] = index[1];\n      address = address.slice(0, index.index);\n    }\n\n    url[key] = url[key] || (\n      relative && instruction[3] ? location[key] || '' : ''\n    );\n\n    //\n    // Hostname, host and protocol should be lowercased so they can be used to\n    // create a proper `origin`.\n    //\n    if (instruction[4]) url[key] = url[key].toLowerCase();\n  }\n\n  //\n  // Also parse the supplied query string in to an object. If we're supplied\n  // with a custom parser as function use that instead of the default build-in\n  // parser.\n  //\n  if (parser) url.query = parser(url.query);\n\n  //\n  // If the URL is relative, resolve the pathname against the base URL.\n  //\n  if (\n      relative\n    && location.slashes\n    && url.pathname.charAt(0) !== '/'\n    && (url.pathname !== '' || location.pathname !== '')\n  ) {\n    url.pathname = resolve(url.pathname, location.pathname);\n  }\n\n  //\n  // Default to a / for pathname if none exists. This normalizes the URL\n  // to always have a /\n  //\n  if (url.pathname.charAt(0) !== '/' && isSpecial(url.protocol)) {\n    url.pathname = '/' + url.pathname;\n  }\n\n  //\n  // We should not add port numbers if they are already the default port number\n  // for a given protocol. As the host also contains the port number we're going\n  // override it with the hostname which contains no port number.\n  //\n  if (!required(url.port, url.protocol)) {\n    url.host = url.hostname;\n    url.port = '';\n  }\n\n  //\n  // Parse down the `auth` for the username and password.\n  //\n  url.username = url.password = '';\n  if (url.auth) {\n    instruction = url.auth.split(':');\n    url.username = instruction[0] || '';\n    url.password = instruction[1] || '';\n  }\n\n  url.origin = url.protocol !== 'file:' && isSpecial(url.protocol) && url.host\n    ? url.protocol +'//'+ url.host\n    : 'null';\n\n  //\n  // The href is just the compiled result.\n  //\n  url.href = url.toString();\n}\n\n/**\n * This is convenience method for changing properties in the URL instance to\n * insure that they all propagate correctly.\n *\n * @param {String} part          Property we need to adjust.\n * @param {Mixed} value          The newly assigned value.\n * @param {Boolean|Function} fn  When setting the query, it will be the function\n *                               used to parse the query.\n *                               When setting the protocol, double slash will be\n *                               removed from the final url if it is true.\n * @returns {URL} URL instance for chaining.\n * @public\n */\nfunction set(part, value, fn) {\n  var url = this;\n\n  switch (part) {\n    case 'query':\n      if ('string' === typeof value && value.length) {\n        value = (fn || qs.parse)(value);\n      }\n\n      url[part] = value;\n      break;\n\n    case 'port':\n      url[part] = value;\n\n      if (!required(value, url.protocol)) {\n        url.host = url.hostname;\n        url[part] = '';\n      } else if (value) {\n        url.host = url.hostname +':'+ value;\n      }\n\n      break;\n\n    case 'hostname':\n      url[part] = value;\n\n      if (url.port) value += ':'+ url.port;\n      url.host = value;\n      break;\n\n    case 'host':\n      url[part] = value;\n\n      if (/:\\d+$/.test(value)) {\n        value = value.split(':');\n        url.port = value.pop();\n        url.hostname = value.join(':');\n      } else {\n        url.hostname = value;\n        url.port = '';\n      }\n\n      break;\n\n    case 'protocol':\n      url.protocol = value.toLowerCase();\n      url.slashes = !fn;\n      break;\n\n    case 'pathname':\n    case 'hash':\n      if (value) {\n        var char = part === 'pathname' ? '/' : '#';\n        url[part] = value.charAt(0) !== char ? char + value : value;\n      } else {\n        url[part] = value;\n      }\n      break;\n\n    default:\n      url[part] = value;\n  }\n\n  for (var i = 0; i < rules.length; i++) {\n    var ins = rules[i];\n\n    if (ins[4]) url[ins[1]] = url[ins[1]].toLowerCase();\n  }\n\n  url.origin = url.protocol !== 'file:' && isSpecial(url.protocol) && url.host\n    ? url.protocol +'//'+ url.host\n    : 'null';\n\n  url.href = url.toString();\n\n  return url;\n}\n\n/**\n * Transform the properties back in to a valid and full URL string.\n *\n * @param {Function} stringify Optional query stringify function.\n * @returns {String} Compiled version of the URL.\n * @public\n */\nfunction toString(stringify) {\n  if (!stringify || 'function' !== typeof stringify) stringify = qs.stringify;\n\n  var query\n    , url = this\n    , protocol = url.protocol;\n\n  if (protocol && protocol.charAt(protocol.length - 1) !== ':') protocol += ':';\n\n  var result = protocol + (url.slashes || isSpecial(url.protocol) ? '//' : '');\n\n  if (url.username) {\n    result += url.username;\n    if (url.password) result += ':'+ url.password;\n    result += '@';\n  }\n\n  result += url.host + url.pathname;\n\n  query = 'object' === typeof url.query ? stringify(url.query) : url.query;\n  if (query) result += '?' !== query.charAt(0) ? '?'+ query : query;\n\n  if (url.hash) result += url.hash;\n\n  return result;\n}\n\nUrl.prototype = { set: set, toString: toString };\n\n//\n// Expose the URL parser and some additional properties that might be useful for\n// others or testing.\n//\nUrl.extractProtocol = extractProtocol;\nUrl.location = lolcation;\nUrl.trimLeft = trimLeft;\nUrl.qs = qs;\n\nmodule.exports = Url;\n","/*\n * This delay allows the thread to finish assigning its on* methods\n * before invoking the delay callback. This is purely a timing hack.\n * http://geekabyte.blogspot.com/2014/01/javascript-effect-of-setting-settimeout.html\n *\n * @param {callback: function} the callback which will be invoked after the timeout\n * @parma {context: object} the context in which to invoke the function\n */\nexport default function delay(callback, context) {\n  setTimeout(timeoutContext => callback.call(timeoutContext), 4, context);\n}\n","export default function log(method, message) {\n  /* eslint-disable no-console */\n  if (typeof process !== 'undefined' && process.env.NODE_ENV !== 'test') {\n    console[method].call(null, message);\n  }\n  /* eslint-enable no-console */\n}\n","export function reject(array = [], callback) {\n  const results = [];\n  array.forEach(itemInArray => {\n    if (!callback(itemInArray)) {\n      results.push(itemInArray);\n    }\n  });\n\n  return results;\n}\n\nexport function filter(array = [], callback) {\n  const results = [];\n  array.forEach(itemInArray => {\n    if (callback(itemInArray)) {\n      results.push(itemInArray);\n    }\n  });\n\n  return results;\n}\n","import { reject, filter } from '../helpers/array-helpers';\n\n/*\n * EventTarget is an interface implemented by objects that can\n * receive events and may have listeners for them.\n *\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget\n */\nclass EventTarget {\n  constructor() {\n    this.listeners = {};\n  }\n\n  /*\n   * Ties a listener function to an event type which can later be invoked via the\n   * dispatchEvent method.\n   *\n   * @param {string} type - the type of event (ie: 'open', 'message', etc.)\n   * @param {function} listener - callback function to invoke when an event is dispatched matching the type\n   * @param {boolean} useCapture - N/A TODO: implement useCapture functionality\n   */\n  addEventListener(type, listener /* , useCapture */) {\n    if (typeof listener === 'function') {\n      if (!Array.isArray(this.listeners[type])) {\n        this.listeners[type] = [];\n      }\n\n      // Only add the same function once\n      if (filter(this.listeners[type], item => item === listener).length === 0) {\n        this.listeners[type].push(listener);\n      }\n    }\n  }\n\n  /*\n   * Removes the listener so it will no longer be invoked via the dispatchEvent method.\n   *\n   * @param {string} type - the type of event (ie: 'open', 'message', etc.)\n   * @param {function} listener - callback function to invoke when an event is dispatched matching the type\n   * @param {boolean} useCapture - N/A TODO: implement useCapture functionality\n   */\n  removeEventListener(type, removingListener /* , useCapture */) {\n    const arrayOfListeners = this.listeners[type];\n    this.listeners[type] = reject(arrayOfListeners, listener => listener === removingListener);\n  }\n\n  /*\n   * Invokes all listener functions that are listening to the given event.type property. Each\n   * listener will be passed the event as the first argument.\n   *\n   * @param {object} event - event object which will be passed to all listeners of the event.type property\n   */\n  dispatchEvent(event, ...customArguments) {\n    const eventName = event.type;\n    const listeners = this.listeners[eventName];\n\n    if (!Array.isArray(listeners)) {\n      return false;\n    }\n\n    listeners.forEach(listener => {\n      if (customArguments.length > 0) {\n        listener.apply(this, customArguments);\n      } else {\n        listener.call(this, event);\n      }\n    });\n\n    return true;\n  }\n}\n\nexport default EventTarget;\n","import { reject } from './helpers/array-helpers';\n\nfunction trimQueryPartFromURL(url) {\n  const queryIndex = url.indexOf('?');\n  return queryIndex >= 0 ? url.slice(0, queryIndex) : url;\n}\n\n/*\n * The network bridge is a way for the mock websocket object to 'communicate' with\n * all available servers. This is a singleton object so it is important that you\n * clean up urlMap whenever you are finished.\n */\nclass NetworkBridge {\n  constructor() {\n    this.urlMap = {};\n  }\n\n  /*\n   * Attaches a websocket object to the urlMap hash so that it can find the server\n   * it is connected to and the server in turn can find it.\n   *\n   * @param {object} websocket - websocket object to add to the urlMap hash\n   * @param {string} url\n   */\n  attachWebSocket(websocket, url) {\n    const serverURL = trimQueryPartFromURL(url);\n    const connectionLookup = this.urlMap[serverURL];\n\n    if (connectionLookup && connectionLookup.server && connectionLookup.websockets.indexOf(websocket) === -1) {\n      connectionLookup.websockets.push(websocket);\n      return connectionLookup.server;\n    }\n  }\n\n  /*\n   * Attaches a websocket to a room\n   */\n  addMembershipToRoom(websocket, room) {\n    const connectionLookup = this.urlMap[trimQueryPartFromURL(websocket.url)];\n\n    if (connectionLookup && connectionLookup.server && connectionLookup.websockets.indexOf(websocket) !== -1) {\n      if (!connectionLookup.roomMemberships[room]) {\n        connectionLookup.roomMemberships[room] = [];\n      }\n\n      connectionLookup.roomMemberships[room].push(websocket);\n    }\n  }\n\n  /*\n   * Attaches a server object to the urlMap hash so that it can find a websockets\n   * which are connected to it and so that websockets can in turn can find it.\n   *\n   * @param {object} server - server object to add to the urlMap hash\n   * @param {string} url\n   */\n  attachServer(server, url) {\n    const connectionLookup = this.urlMap[url];\n\n    if (!connectionLookup) {\n      this.urlMap[url] = {\n        server,\n        websockets: [],\n        roomMemberships: {}\n      };\n\n      return server;\n    }\n  }\n\n  /*\n   * Finds the server which is 'running' on the given url.\n   *\n   * @param {string} url - the url to use to find which server is running on it\n   */\n  serverLookup(url) {\n    const serverURL = trimQueryPartFromURL(url);\n    const connectionLookup = this.urlMap[serverURL];\n\n    if (connectionLookup) {\n      return connectionLookup.server;\n    }\n  }\n\n  /*\n   * Finds all websockets which is 'listening' on the given url.\n   *\n   * @param {string} url - the url to use to find all websockets which are associated with it\n   * @param {string} room - if a room is provided, will only return sockets in this room\n   * @param {class} broadcaster - socket that is broadcasting and is to be excluded from the lookup\n   */\n  websocketsLookup(url, room, broadcaster) {\n    const serverURL = trimQueryPartFromURL(url);\n    let websockets;\n    const connectionLookup = this.urlMap[serverURL];\n\n    websockets = connectionLookup ? connectionLookup.websockets : [];\n\n    if (room) {\n      const members = connectionLookup.roomMemberships[room];\n      websockets = members || [];\n    }\n\n    return broadcaster ? websockets.filter(websocket => websocket !== broadcaster) : websockets;\n  }\n\n  /*\n   * Removes the entry associated with the url.\n   *\n   * @param {string} url\n   */\n  removeServer(url) {\n    delete this.urlMap[trimQueryPartFromURL(url)];\n  }\n\n  /*\n   * Removes the individual websocket from the map of associated websockets.\n   *\n   * @param {object} websocket - websocket object to remove from the url map\n   * @param {string} url\n   */\n  removeWebSocket(websocket, url) {\n    const serverURL = trimQueryPartFromURL(url);\n    const connectionLookup = this.urlMap[serverURL];\n\n    if (connectionLookup) {\n      connectionLookup.websockets = reject(connectionLookup.websockets, socket => socket === websocket);\n    }\n  }\n\n  /*\n   * Removes a websocket from a room\n   */\n  removeMembershipFromRoom(websocket, room) {\n    const connectionLookup = this.urlMap[trimQueryPartFromURL(websocket.url)];\n    const memberships = connectionLookup.roomMemberships[room];\n\n    if (connectionLookup && memberships !== null) {\n      connectionLookup.roomMemberships[room] = reject(memberships, socket => socket === websocket);\n    }\n  }\n}\n\nexport default new NetworkBridge(); // Note: this is a singleton\n","/*\n * https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent\n */\nexport const CLOSE_CODES = {\n  CLOSE_NORMAL: 1000,\n  CLOSE_GOING_AWAY: 1001,\n  CLOSE_PROTOCOL_ERROR: 1002,\n  CLOSE_UNSUPPORTED: 1003,\n  CLOSE_NO_STATUS: 1005,\n  CLOSE_ABNORMAL: 1006,\n  UNSUPPORTED_DATA: 1007,\n  POLICY_VIOLATION: 1008,\n  CLOSE_TOO_LARGE: 1009,\n  MISSING_EXTENSION: 1010,\n  INTERNAL_ERROR: 1011,\n  SERVICE_RESTART: 1012,\n  TRY_AGAIN_LATER: 1013,\n  TLS_HANDSHAKE: 1015\n};\n\nexport const ERROR_PREFIX = {\n  CONSTRUCTOR_ERROR: \"Failed to construct 'WebSocket':\",\n  CLOSE_ERROR: \"Failed to execute 'close' on 'WebSocket':\",\n  EVENT: {\n    CONSTRUCT: \"Failed to construct 'Event':\",\n    MESSAGE: \"Failed to construct 'MessageEvent':\",\n    CLOSE: \"Failed to construct 'CloseEvent':\"\n  }\n};\n","export default class EventPrototype {\n  // Noops\n  stopPropagation() {}\n  stopImmediatePropagation() {}\n\n  // if no arguments are passed then the type is set to \"undefined\" on\n  // chrome and safari.\n  initEvent(type = 'undefined', bubbles = false, cancelable = false) {\n    this.type = `${type}`;\n    this.bubbles = Boolean(bubbles);\n    this.cancelable = Boolean(cancelable);\n  }\n}\n","import EventPrototype from './prototype';\nimport { ERROR_PREFIX } from '../constants';\n\nexport default class Event extends EventPrototype {\n  constructor(type, eventInitConfig = {}) {\n    super();\n\n    if (!type) {\n      throw new TypeError(`${ERROR_PREFIX.EVENT_ERROR} 1 argument required, but only 0 present.`);\n    }\n\n    if (typeof eventInitConfig !== 'object') {\n      throw new TypeError(`${ERROR_PREFIX.EVENT_ERROR} parameter 2 ('eventInitDict') is not an object.`);\n    }\n\n    const { bubbles, cancelable } = eventInitConfig;\n\n    this.type = `${type}`;\n    this.timeStamp = Date.now();\n    this.target = null;\n    this.srcElement = null;\n    this.returnValue = true;\n    this.isTrusted = false;\n    this.eventPhase = 0;\n    this.defaultPrevented = false;\n    this.currentTarget = null;\n    this.cancelable = cancelable ? Boolean(cancelable) : false;\n    this.canncelBubble = false;\n    this.bubbles = bubbles ? Boolean(bubbles) : false;\n  }\n}\n","import EventPrototype from './prototype';\nimport { ERROR_PREFIX } from '../constants';\n\nexport default class MessageEvent extends EventPrototype {\n  constructor(type, eventInitConfig = {}) {\n    super();\n\n    if (!type) {\n      throw new TypeError(`${ERROR_PREFIX.EVENT.MESSAGE} 1 argument required, but only 0 present.`);\n    }\n\n    if (typeof eventInitConfig !== 'object') {\n      throw new TypeError(`${ERROR_PREFIX.EVENT.MESSAGE} parameter 2 ('eventInitDict') is not an object`);\n    }\n\n    const { bubbles, cancelable, data, origin, lastEventId, ports } = eventInitConfig;\n\n    this.type = `${type}`;\n    this.timeStamp = Date.now();\n    this.target = null;\n    this.srcElement = null;\n    this.returnValue = true;\n    this.isTrusted = false;\n    this.eventPhase = 0;\n    this.defaultPrevented = false;\n    this.currentTarget = null;\n    this.cancelable = cancelable ? Boolean(cancelable) : false;\n    this.canncelBubble = false;\n    this.bubbles = bubbles ? Boolean(bubbles) : false;\n    this.origin = `${origin}`;\n    this.ports = typeof ports === 'undefined' ? null : ports;\n    this.data = typeof data === 'undefined' ? null : data;\n    this.lastEventId = `${lastEventId || ''}`;\n  }\n}\n","import EventPrototype from './prototype';\nimport { ERROR_PREFIX } from '../constants';\n\nexport default class CloseEvent extends EventPrototype {\n  constructor(type, eventInitConfig = {}) {\n    super();\n\n    if (!type) {\n      throw new TypeError(`${ERROR_PREFIX.EVENT.CLOSE} 1 argument required, but only 0 present.`);\n    }\n\n    if (typeof eventInitConfig !== 'object') {\n      throw new TypeError(`${ERROR_PREFIX.EVENT.CLOSE} parameter 2 ('eventInitDict') is not an object`);\n    }\n\n    const { bubbles, cancelable, code, reason, wasClean } = eventInitConfig;\n\n    this.type = `${type}`;\n    this.timeStamp = Date.now();\n    this.target = null;\n    this.srcElement = null;\n    this.returnValue = true;\n    this.isTrusted = false;\n    this.eventPhase = 0;\n    this.defaultPrevented = false;\n    this.currentTarget = null;\n    this.cancelable = cancelable ? Boolean(cancelable) : false;\n    this.cancelBubble = false;\n    this.bubbles = bubbles ? Boolean(bubbles) : false;\n    this.code = typeof code === 'number' ? parseInt(code, 10) : 0;\n    this.reason = `${reason || ''}`;\n    this.wasClean = wasClean ? Boolean(wasClean) : false;\n  }\n}\n","import Event from './event';\nimport MessageEvent from './message';\nimport CloseEvent from './close';\n\n/*\n * Creates an Event object and extends it to allow full modification of\n * its properties.\n *\n * @param {object} config - within config you will need to pass type and optionally target\n */\nfunction createEvent(config) {\n  const { type, target } = config;\n  const eventObject = new Event(type);\n\n  if (target) {\n    eventObject.target = target;\n    eventObject.srcElement = target;\n    eventObject.currentTarget = target;\n  }\n\n  return eventObject;\n}\n\n/*\n * Creates a MessageEvent object and extends it to allow full modification of\n * its properties.\n *\n * @param {object} config - within config: type, origin, data and optionally target\n */\nfunction createMessageEvent(config) {\n  const { type, origin, data, target } = config;\n  const messageEvent = new MessageEvent(type, {\n    data,\n    origin\n  });\n\n  if (target) {\n    messageEvent.target = target;\n    messageEvent.srcElement = target;\n    messageEvent.currentTarget = target;\n  }\n\n  return messageEvent;\n}\n\n/*\n * Creates a CloseEvent object and extends it to allow full modification of\n * its properties.\n *\n * @param {object} config - within config: type and optionally target, code, and reason\n */\nfunction createCloseEvent(config) {\n  const { code, reason, type, target } = config;\n  let { wasClean } = config;\n\n  if (!wasClean) {\n    wasClean = code === 1000;\n  }\n\n  const closeEvent = new CloseEvent(type, {\n    code,\n    reason,\n    wasClean\n  });\n\n  if (target) {\n    closeEvent.target = target;\n    closeEvent.srcElement = target;\n    closeEvent.currentTarget = target;\n  }\n\n  return closeEvent;\n}\n\nexport { createEvent, createMessageEvent, createCloseEvent };\n","import WebSocket from '../websocket';\nimport delay from '../helpers/delay';\nimport networkBridge from '../network-bridge';\nimport { createCloseEvent, createEvent } from '../event/factory';\n\nexport function closeWebSocketConnection(context, code, reason) {\n  context.readyState = WebSocket.CLOSING;\n\n  const server = networkBridge.serverLookup(context.url);\n  const closeEvent = createCloseEvent({\n    type: 'close',\n    target: context,\n    code,\n    reason\n  });\n\n  delay(() => {\n    networkBridge.removeWebSocket(context, context.url);\n\n    context.readyState = WebSocket.CLOSED;\n    context.dispatchEvent(closeEvent);\n\n    if (server) {\n      server.dispatchEvent(closeEvent, server);\n    }\n  }, context);\n}\n\nexport function failWebSocketConnection(context, code, reason) {\n  context.readyState = WebSocket.CLOSING;\n\n  const server = networkBridge.serverLookup(context.url);\n  const closeEvent = createCloseEvent({\n    type: 'close',\n    target: context,\n    code,\n    reason,\n    wasClean: false\n  });\n\n  const errorEvent = createEvent({\n    type: 'error',\n    target: context\n  });\n\n  delay(() => {\n    networkBridge.removeWebSocket(context, context.url);\n\n    context.readyState = WebSocket.CLOSED;\n    context.dispatchEvent(errorEvent);\n    context.dispatchEvent(closeEvent);\n\n    if (server) {\n      server.dispatchEvent(closeEvent, server);\n    }\n  }, context);\n}\n","export default function normalizeSendData(data) {\n  if (Object.prototype.toString.call(data) !== '[object Blob]' && !(data instanceof ArrayBuffer)) {\n    data = String(data);\n  }\n\n  return data;\n}\n","import { CLOSE_CODES } from '../constants';\nimport { closeWebSocketConnection } from '../algorithms/close';\nimport normalizeSendData from './normalize-send';\nimport { createMessageEvent } from '../event/factory';\n\nexport default function proxyFactory(target) {\n  const handler = {\n    get(obj, prop) {\n      if (prop === 'close') {\n        return function close(options = {}) {\n          const code = options.code || CLOSE_CODES.CLOSE_NORMAL;\n          const reason = options.reason || '';\n\n          closeWebSocketConnection(target, code, reason);\n        };\n      }\n\n      if (prop === 'send') {\n        return function send(data) {\n          data = normalizeSendData(data);\n\n          target.dispatchEvent(\n            createMessageEvent({\n              type: 'message',\n              data,\n              origin: this.url,\n              target\n            })\n          );\n        };\n      }\n\n      if (prop === 'on') {\n        return function onWrapper(type, cb) {\n          target.addEventListener(`server::${type}`, cb);\n        };\n      }\n\n      return obj[prop];\n    }\n  };\n\n  const proxy = new Proxy(target, handler);\n  return proxy;\n}\n","export default function lengthInUtf8Bytes(str) {\n  // Matches only the 10.. bytes that are non-initial characters in a multi-byte sequence.\n  const m = encodeURIComponent(str).match(/%[89ABab]/g);\n  return str.length + (m ? m.length : 0);\n}\n","import URL from 'url-parse';\nimport { ERROR_PREFIX } from '../constants';\n\nexport default function urlVerification(url) {\n  const urlRecord = new URL(url);\n  const { pathname, protocol, hash } = urlRecord;\n\n  if (!url) {\n    throw new TypeError(`${ERROR_PREFIX.CONSTRUCTOR_ERROR} 1 argument required, but only 0 present.`);\n  }\n\n  if (!pathname) {\n    urlRecord.pathname = '/';\n  }\n\n  if (protocol === '') {\n    throw new SyntaxError(`${ERROR_PREFIX.CONSTRUCTOR_ERROR} The URL '${urlRecord.toString()}' is invalid.`);\n  }\n\n  if (protocol !== 'ws:' && protocol !== 'wss:') {\n    throw new SyntaxError(\n      `${ERROR_PREFIX.CONSTRUCTOR_ERROR} The URL's scheme must be either 'ws' or 'wss'. '${protocol}' is not allowed.`\n    );\n  }\n\n  if (hash !== '') {\n    /* eslint-disable max-len */\n    throw new SyntaxError(\n      `${\n        ERROR_PREFIX.CONSTRUCTOR_ERROR\n      } The URL contains a fragment identifier ('${hash}'). Fragment identifiers are not allowed in WebSocket URLs.`\n    );\n    /* eslint-enable max-len */\n  }\n\n  return urlRecord.toString();\n}\n","import { ERROR_PREFIX } from '../constants';\n\nexport default function protocolVerification(protocols = []) {\n  if (!Array.isArray(protocols) && typeof protocols !== 'string') {\n    throw new SyntaxError(`${ERROR_PREFIX.CONSTRUCTOR_ERROR} The subprotocol '${protocols.toString()}' is invalid.`);\n  }\n\n  if (typeof protocols === 'string') {\n    protocols = [protocols];\n  }\n\n  const uniq = protocols\n    .map(p => ({ count: 1, protocol: p }))\n    .reduce((a, b) => {\n      a[b.protocol] = (a[b.protocol] || 0) + b.count;\n      return a;\n    }, {});\n\n  const duplicates = Object.keys(uniq).filter(a => uniq[a] > 1);\n\n  if (duplicates.length > 0) {\n    throw new SyntaxError(`${ERROR_PREFIX.CONSTRUCTOR_ERROR} The subprotocol '${duplicates[0]}' is duplicated.`);\n  }\n\n  return protocols;\n}\n","import delay from './helpers/delay';\nimport logger from './helpers/logger';\nimport EventTarget from './event/target';\nimport networkBridge from './network-bridge';\nimport proxyFactory from './helpers/proxy-factory';\nimport lengthInUtf8Bytes from './helpers/byte-length';\nimport { CLOSE_CODES, ERROR_PREFIX } from './constants';\nimport urlVerification from './helpers/url-verification';\nimport normalizeSendData from './helpers/normalize-send';\nimport protocolVerification from './helpers/protocol-verification';\nimport { createEvent, createMessageEvent, createCloseEvent } from './event/factory';\nimport { closeWebSocketConnection, failWebSocketConnection } from './algorithms/close';\n\n/*\n * The main websocket class which is designed to mimick the native WebSocket class as close\n * as possible.\n *\n * https://html.spec.whatwg.org/multipage/web-sockets.html\n */\nclass WebSocket extends EventTarget {\n  constructor(url, protocols) {\n    super();\n\n    this.url = urlVerification(url);\n    protocols = protocolVerification(protocols);\n    this.protocol = protocols[0] || '';\n\n    this.binaryType = 'blob';\n    this.readyState = WebSocket.CONNECTING;\n\n    const server = networkBridge.attachWebSocket(this, this.url);\n\n    /*\n     * This delay is needed so that we dont trigger an event before the callbacks have been\n     * setup. For example:\n     *\n     * var socket = new WebSocket('ws://localhost');\n     *\n     * If we dont have the delay then the event would be triggered right here and this is\n     * before the onopen had a chance to register itself.\n     *\n     * socket.onopen = () => { // this would never be called };\n     *\n     * and with the delay the event gets triggered here after all of the callbacks have been\n     * registered :-)\n     */\n    delay(function delayCallback() {\n      if (server) {\n        if (\n          server.options.verifyClient &&\n          typeof server.options.verifyClient === 'function' &&\n          !server.options.verifyClient()\n        ) {\n          this.readyState = WebSocket.CLOSED;\n\n          logger(\n            'error',\n            `WebSocket connection to '${this.url}' failed: HTTP Authentication failed; no valid credentials available`\n          );\n\n          networkBridge.removeWebSocket(this, this.url);\n          this.dispatchEvent(createEvent({ type: 'error', target: this }));\n          this.dispatchEvent(createCloseEvent({ type: 'close', target: this, code: CLOSE_CODES.CLOSE_NORMAL }));\n        } else {\n          if (server.options.selectProtocol && typeof server.options.selectProtocol === 'function') {\n            const selectedProtocol = server.options.selectProtocol(protocols);\n            const isFilled = selectedProtocol !== '';\n            const isRequested = protocols.indexOf(selectedProtocol) !== -1;\n            if (isFilled && !isRequested) {\n              this.readyState = WebSocket.CLOSED;\n\n              logger('error', `WebSocket connection to '${this.url}' failed: Invalid Sub-Protocol`);\n\n              networkBridge.removeWebSocket(this, this.url);\n              this.dispatchEvent(createEvent({ type: 'error', target: this }));\n              this.dispatchEvent(createCloseEvent({ type: 'close', target: this, code: CLOSE_CODES.CLOSE_NORMAL }));\n              return;\n            }\n            this.protocol = selectedProtocol;\n          }\n          this.readyState = WebSocket.OPEN;\n          this.dispatchEvent(createEvent({ type: 'open', target: this }));\n          server.dispatchEvent(createEvent({ type: 'connection' }), proxyFactory(this));\n        }\n      } else {\n        this.readyState = WebSocket.CLOSED;\n        this.dispatchEvent(createEvent({ type: 'error', target: this }));\n        this.dispatchEvent(createCloseEvent({ type: 'close', target: this, code: CLOSE_CODES.CLOSE_NORMAL }));\n\n        logger('error', `WebSocket connection to '${this.url}' failed`);\n      }\n    }, this);\n  }\n\n  get onopen() {\n    return this.listeners.open;\n  }\n\n  get onmessage() {\n    return this.listeners.message;\n  }\n\n  get onclose() {\n    return this.listeners.close;\n  }\n\n  get onerror() {\n    return this.listeners.error;\n  }\n\n  set onopen(listener) {\n    delete this.listeners.open;\n    this.addEventListener('open', listener);\n  }\n\n  set onmessage(listener) {\n    delete this.listeners.message;\n    this.addEventListener('message', listener);\n  }\n\n  set onclose(listener) {\n    delete this.listeners.close;\n    this.addEventListener('close', listener);\n  }\n\n  set onerror(listener) {\n    delete this.listeners.error;\n    this.addEventListener('error', listener);\n  }\n\n  send(data) {\n    if (this.readyState === WebSocket.CLOSING || this.readyState === WebSocket.CLOSED) {\n      throw new Error('WebSocket is already in CLOSING or CLOSED state');\n    }\n\n    // TODO: handle bufferedAmount\n\n    const messageEvent = createMessageEvent({\n      type: 'server::message',\n      origin: this.url,\n      data: normalizeSendData(data)\n    });\n\n    const server = networkBridge.serverLookup(this.url);\n\n    if (server) {\n      delay(() => {\n        this.dispatchEvent(messageEvent, data);\n      }, server);\n    }\n  }\n\n  close(code, reason) {\n    if (code !== undefined) {\n      if (typeof code !== 'number' || (code !== 1000 && (code < 3000 || code > 4999))) {\n        throw new TypeError(\n          `${ERROR_PREFIX.CLOSE_ERROR} The code must be either 1000, or between 3000 and 4999. ${code} is neither.`\n        );\n      }\n    }\n\n    if (reason !== undefined) {\n      const length = lengthInUtf8Bytes(reason);\n\n      if (length > 123) {\n        throw new SyntaxError(`${ERROR_PREFIX.CLOSE_ERROR} The message must not be greater than 123 bytes.`);\n      }\n    }\n\n    if (this.readyState === WebSocket.CLOSING || this.readyState === WebSocket.CLOSED) {\n      return;\n    }\n\n    if (this.readyState === WebSocket.CONNECTING) {\n      failWebSocketConnection(this, code, reason);\n    } else {\n      closeWebSocketConnection(this, code, reason);\n    }\n  }\n}\n\nWebSocket.CONNECTING = 0;\nWebSocket.prototype.CONNECTING = WebSocket.CONNECTING;\nWebSocket.OPEN = 1;\nWebSocket.prototype.OPEN = WebSocket.OPEN;\nWebSocket.CLOSING = 2;\nWebSocket.prototype.CLOSING = WebSocket.CLOSING;\nWebSocket.CLOSED = 3;\nWebSocket.prototype.CLOSED = WebSocket.CLOSED;\n\nexport default WebSocket;\n","export default arr =>\n  arr.reduce((deduped, b) => {\n    if (deduped.indexOf(b) > -1) return deduped;\n    return deduped.concat(b);\n  }, []);\n","export default function retrieveGlobalObject() {\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n\n  return typeof process === 'object' && typeof require === 'function' && typeof global === 'object' ? global : this;\n}\n","import URL from 'url-parse';\nimport WebSocket from './websocket';\nimport dedupe from './helpers/dedupe';\nimport EventTarget from './event/target';\nimport { CLOSE_CODES } from './constants';\nimport networkBridge from './network-bridge';\nimport globalObject from './helpers/global-object';\nimport normalizeSendData from './helpers/normalize-send';\nimport { createEvent, createMessageEvent, createCloseEvent } from './event/factory';\n\nclass Server extends EventTarget {\n  constructor(url, options = {}) {\n    super();\n    const urlRecord = new URL(url);\n\n    if (!urlRecord.pathname) {\n      urlRecord.pathname = '/';\n    }\n\n    this.url = urlRecord.toString();\n\n    this.originalWebSocket = null;\n    const server = networkBridge.attachServer(this, this.url);\n\n    if (!server) {\n      this.dispatchEvent(createEvent({ type: 'error' }));\n      throw new Error('A mock server is already listening on this url');\n    }\n\n    if (typeof options.verifyClient === 'undefined') {\n      options.verifyClient = null;\n    }\n\n    if (typeof options.selectProtocol === 'undefined') {\n      options.selectProtocol = null;\n    }\n\n    this.options = options;\n    this.start();\n  }\n\n  /*\n   * Attaches the mock websocket object to the global object\n   */\n  start() {\n    const globalObj = globalObject();\n\n    if (globalObj.WebSocket) {\n      this.originalWebSocket = globalObj.WebSocket;\n    }\n\n    globalObj.WebSocket = WebSocket;\n  }\n\n  /*\n   * Removes the mock websocket object from the global object\n   */\n  stop(callback = () => {}) {\n    const globalObj = globalObject();\n\n    if (this.originalWebSocket) {\n      globalObj.WebSocket = this.originalWebSocket;\n    } else {\n      delete globalObj.WebSocket;\n    }\n\n    this.originalWebSocket = null;\n\n    networkBridge.removeServer(this.url);\n\n    if (typeof callback === 'function') {\n      callback();\n    }\n  }\n\n  /*\n   * This is the main function for the mock server to subscribe to the on events.\n   *\n   * ie: mockServer.on('connection', function() { console.log('a mock client connected'); });\n   *\n   * @param {string} type - The event key to subscribe to. Valid keys are: connection, message, and close.\n   * @param {function} callback - The callback which should be called when a certain event is fired.\n   */\n  on(type, callback) {\n    this.addEventListener(type, callback);\n  }\n\n  /*\n   * Closes the connection and triggers the onclose method of all listening\n   * websockets. After that it removes itself from the urlMap so another server\n   * could add itself to the url.\n   *\n   * @param {object} options\n   */\n  close(options = {}) {\n    const { code, reason, wasClean } = options;\n    const listeners = networkBridge.websocketsLookup(this.url);\n\n    // Remove server before notifications to prevent immediate reconnects from\n    // socket onclose handlers\n    networkBridge.removeServer(this.url);\n\n    listeners.forEach(socket => {\n      socket.readyState = WebSocket.CLOSED;\n      socket.dispatchEvent(\n        createCloseEvent({\n          type: 'close',\n          target: socket,\n          code: code || CLOSE_CODES.CLOSE_NORMAL,\n          reason: reason || '',\n          wasClean\n        })\n      );\n    });\n\n    this.dispatchEvent(createCloseEvent({ type: 'close' }), this);\n  }\n\n  /*\n   * Sends a generic message event to all mock clients.\n   */\n  emit(event, data, options = {}) {\n    let { websockets } = options;\n\n    if (!websockets) {\n      websockets = networkBridge.websocketsLookup(this.url);\n    }\n\n    if (typeof options !== 'object' || arguments.length > 3) {\n      data = Array.prototype.slice.call(arguments, 1, arguments.length);\n      data = data.map(item => normalizeSendData(item));\n    } else {\n      data = normalizeSendData(data);\n    }\n\n    websockets.forEach(socket => {\n      if (Array.isArray(data)) {\n        socket.dispatchEvent(\n          createMessageEvent({\n            type: event,\n            data,\n            origin: this.url,\n            target: socket\n          }),\n          ...data\n        );\n      } else {\n        socket.dispatchEvent(\n          createMessageEvent({\n            type: event,\n            data,\n            origin: this.url,\n            target: socket\n          })\n        );\n      }\n    });\n  }\n\n  /*\n   * Returns an array of websockets which are listening to this server\n   * TOOD: this should return a set and not be a method\n   */\n  clients() {\n    return networkBridge.websocketsLookup(this.url);\n  }\n\n  /*\n   * Prepares a method to submit an event to members of the room\n   *\n   * e.g. server.to('my-room').emit('hi!');\n   */\n  to(room, broadcaster, broadcastList = []) {\n    const self = this;\n    const websockets = dedupe(broadcastList.concat(networkBridge.websocketsLookup(this.url, room, broadcaster)));\n\n    return {\n      to: (chainedRoom, chainedBroadcaster) => this.to.call(this, chainedRoom, chainedBroadcaster, websockets),\n      emit(event, data) {\n        self.emit(event, data, { websockets });\n      }\n    };\n  }\n\n  /*\n   * Alias for Server.to\n   */\n  in(...args) {\n    return this.to.apply(null, args);\n  }\n\n  /*\n   * Simulate an event from the server to the clients. Useful for\n   * simulating errors.\n   */\n  simulate(event) {\n    const listeners = networkBridge.websocketsLookup(this.url);\n\n    if (event === 'error') {\n      listeners.forEach(socket => {\n        socket.readyState = WebSocket.CLOSED;\n        socket.dispatchEvent(createEvent({ type: 'error' }));\n      });\n    }\n  }\n}\n\n/*\n * Alternative constructor to support namespaces in socket.io\n *\n * http://socket.io/docs/rooms-and-namespaces/#custom-namespaces\n */\nServer.of = function of(url) {\n  return new Server(url);\n};\n\nexport default Server;\n","import URL from 'url-parse';\nimport delay from './helpers/delay';\nimport EventTarget from './event/target';\nimport networkBridge from './network-bridge';\nimport { CLOSE_CODES } from './constants';\nimport logger from './helpers/logger';\nimport { createEvent, createMessageEvent, createCloseEvent } from './event/factory';\n\n/*\n * The socket-io class is designed to mimick the real API as closely as possible.\n *\n * http://socket.io/docs/\n */\nclass SocketIO extends EventTarget {\n  /*\n   * @param {string} url\n   */\n  constructor(url = 'socket.io', protocol = '') {\n    super();\n\n    this.binaryType = 'blob';\n    const urlRecord = new URL(url);\n\n    if (!urlRecord.pathname) {\n      urlRecord.pathname = '/';\n    }\n\n    this.url = urlRecord.toString();\n    this.readyState = SocketIO.CONNECTING;\n    this.protocol = '';\n\n    if (typeof protocol === 'string' || (typeof protocol === 'object' && protocol !== null)) {\n      this.protocol = protocol;\n    } else if (Array.isArray(protocol) && protocol.length > 0) {\n      this.protocol = protocol[0];\n    }\n\n    const server = networkBridge.attachWebSocket(this, this.url);\n\n    /*\n     * Delay triggering the connection events so they can be defined in time.\n     */\n    delay(function delayCallback() {\n      if (server) {\n        this.readyState = SocketIO.OPEN;\n        server.dispatchEvent(createEvent({ type: 'connection' }), server, this);\n        server.dispatchEvent(createEvent({ type: 'connect' }), server, this); // alias\n        this.dispatchEvent(createEvent({ type: 'connect', target: this }));\n      } else {\n        this.readyState = SocketIO.CLOSED;\n        this.dispatchEvent(createEvent({ type: 'error', target: this }));\n        this.dispatchEvent(\n          createCloseEvent({\n            type: 'close',\n            target: this,\n            code: CLOSE_CODES.CLOSE_NORMAL\n          })\n        );\n\n        logger('error', `Socket.io connection to '${this.url}' failed`);\n      }\n    }, this);\n\n    /**\n      Add an aliased event listener for close / disconnect\n     */\n    this.addEventListener('close', event => {\n      this.dispatchEvent(\n        createCloseEvent({\n          type: 'disconnect',\n          target: event.target,\n          code: event.code\n        })\n      );\n    });\n  }\n\n  /*\n   * Closes the SocketIO connection or connection attempt, if any.\n   * If the connection is already CLOSED, this method does nothing.\n   */\n  close() {\n    if (this.readyState !== SocketIO.OPEN) {\n      return undefined;\n    }\n\n    const server = networkBridge.serverLookup(this.url);\n    networkBridge.removeWebSocket(this, this.url);\n\n    this.readyState = SocketIO.CLOSED;\n    this.dispatchEvent(\n      createCloseEvent({\n        type: 'close',\n        target: this,\n        code: CLOSE_CODES.CLOSE_NORMAL\n      })\n    );\n\n    if (server) {\n      server.dispatchEvent(\n        createCloseEvent({\n          type: 'disconnect',\n          target: this,\n          code: CLOSE_CODES.CLOSE_NORMAL\n        }),\n        server\n      );\n    }\n\n    return this;\n  }\n\n  /*\n   * Alias for Socket#close\n   *\n   * https://github.com/socketio/socket.io-client/blob/master/lib/socket.js#L383\n   */\n  disconnect() {\n    return this.close();\n  }\n\n  /*\n   * Submits an event to the server with a payload\n   */\n  emit(event, ...data) {\n    if (this.readyState !== SocketIO.OPEN) {\n      throw new Error('SocketIO is already in CLOSING or CLOSED state');\n    }\n\n    const messageEvent = createMessageEvent({\n      type: event,\n      origin: this.url,\n      data\n    });\n\n    const server = networkBridge.serverLookup(this.url);\n\n    if (server) {\n      server.dispatchEvent(messageEvent, ...data);\n    }\n\n    return this;\n  }\n\n  /*\n   * Submits a 'message' event to the server.\n   *\n   * Should behave exactly like WebSocket#send\n   *\n   * https://github.com/socketio/socket.io-client/blob/master/lib/socket.js#L113\n   */\n  send(data) {\n    this.emit('message', data);\n    return this;\n  }\n\n  /*\n   * For broadcasting events to other connected sockets.\n   *\n   * e.g. socket.broadcast.emit('hi!');\n   * e.g. socket.broadcast.to('my-room').emit('hi!');\n   */\n  get broadcast() {\n    if (this.readyState !== SocketIO.OPEN) {\n      throw new Error('SocketIO is already in CLOSING or CLOSED state');\n    }\n\n    const self = this;\n    const server = networkBridge.serverLookup(this.url);\n    if (!server) {\n      throw new Error(`SocketIO can not find a server at the specified URL (${this.url})`);\n    }\n\n    return {\n      emit(event, data) {\n        server.emit(event, data, { websockets: networkBridge.websocketsLookup(self.url, null, self) });\n        return self;\n      },\n      to(room) {\n        return server.to(room, self);\n      },\n      in(room) {\n        return server.in(room, self);\n      }\n    };\n  }\n\n  /*\n   * For registering events to be received from the server\n   */\n  on(type, callback) {\n    this.addEventListener(type, callback);\n    return this;\n  }\n\n  /*\n   * Remove event listener\n   *\n   * https://github.com/component/emitter#emitteroffevent-fn\n   */\n  off(type, callback) {\n    this.removeEventListener(type, callback);\n  }\n\n  /*\n   * Check if listeners have already been added for an event\n   *\n   * https://github.com/component/emitter#emitterhaslistenersevent\n   */\n  hasListeners(type) {\n    const listeners = this.listeners[type];\n    if (!Array.isArray(listeners)) {\n      return false;\n    }\n    return !!listeners.length;\n  }\n\n  /*\n   * Join a room on a server\n   *\n   * http://socket.io/docs/rooms-and-namespaces/#joining-and-leaving\n   */\n  join(room) {\n    networkBridge.addMembershipToRoom(this, room);\n  }\n\n  /*\n   * Get the websocket to leave the room\n   *\n   * http://socket.io/docs/rooms-and-namespaces/#joining-and-leaving\n   */\n  leave(room) {\n    networkBridge.removeMembershipFromRoom(this, room);\n  }\n\n  to(room) {\n    return this.broadcast.to(room);\n  }\n\n  in() {\n    return this.to.apply(null, arguments);\n  }\n\n  /*\n   * Invokes all listener functions that are listening to the given event.type property. Each\n   * listener will be passed the event as the first argument.\n   *\n   * @param {object} event - event object which will be passed to all listeners of the event.type property\n   */\n  dispatchEvent(event, ...customArguments) {\n    const eventName = event.type;\n    const listeners = this.listeners[eventName];\n\n    if (!Array.isArray(listeners)) {\n      return false;\n    }\n\n    listeners.forEach(listener => {\n      if (customArguments.length > 0) {\n        listener.apply(this, customArguments);\n      } else {\n        // Regular WebSockets expect a MessageEvent but Socketio.io just wants raw data\n        //  payload instanceof MessageEvent works, but you can't isntance of NodeEvent\n        //  for now we detect if the output has data defined on it\n        listener.call(this, event.data ? event.data : event);\n      }\n    });\n  }\n}\n\nSocketIO.CONNECTING = 0;\nSocketIO.OPEN = 1;\nSocketIO.CLOSING = 2;\nSocketIO.CLOSED = 3;\n\n/*\n * Static constructor methods for the IO Socket\n */\nconst IO = function ioConstructor(url, protocol) {\n  return new SocketIO(url, protocol);\n};\n\n/*\n * Alias the raw IO() constructor\n */\nIO.connect = function ioConnect(url, protocol) {\n  /* eslint-disable new-cap */\n  return IO(url, protocol);\n  /* eslint-enable new-cap */\n};\n\nexport default IO;\n","import MockServer from './server';\nimport MockSocketIO from './socket-io';\nimport MockWebSocket from './websocket';\n\nexport const Server = MockServer;\nexport const WebSocket = MockWebSocket;\nexport const SocketIO = MockSocketIO;\n"]},"metadata":{},"sourceType":"script"}