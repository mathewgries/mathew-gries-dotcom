{"ast":null,"code":"var _jsxFileName = \"/Users/mat/projects/mathew-gries-dotcom/frontend/src/features/converter/ConverterPage.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateBinValue, updateDecValue, selectBinValue, selectDecValue } from \"./converterSlice\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ConverterPage = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const binValue = useSelector(selectBinValue);\n  const decValue = useSelector(selectDecValue);\n  let maxLength = binValue.length === 8;\n\n  const handleInputUpdate = e => {\n    const {\n      value\n    } = e.target;\n    const {\n      inputType\n    } = e.nativeEvent;\n\n    if (!maxLength || inputType === \"deleteContentBackward\") {\n      for (let i = 0; i < value.length; i++) {\n        const num = value.charAt(i);\n\n        if (num !== \"0\" && num !== \"1\") {\n          alert(\"Enter 1 or 0\");\n          return;\n        }\n      }\n\n      dispatch(updateBinValue(value));\n    }\n  };\n\n  const caluclateDecimalvalue = (binValue, pos) => {\n    const bin = parseFloat(binValue);\n    return bin * Math.pow(2, pos);\n  };\n\n  const getAnswer = binValue => {\n    let result = 0;\n\n    for (let i = 0; i < binValue.length; i++) {\n      const pos = binValue.length - i - 1;\n      result += caluclateDecimalvalue(binValue.charAt(i), pos);\n    }\n\n    dispatch(updateDecValue(result));\n  };\n\n  const clearFields = e => {\n    e.preventDefault();\n    dispatch(updateBinValue(\"\"));\n    dispatch(updateDecValue(0));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    getAnswer(binValue);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Convert Binary To Decimal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          autoFocus: true,\n          type: \"text\",\n          value: binValue,\n          onChange: handleInputUpdate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: decValue,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Convert\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: clearFields,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ConverterPage, \"8rvtciWoMMCO1iIu8H6xqQUqyew=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = ConverterPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConverterPage\");","map":{"version":3,"sources":["/Users/mat/projects/mathew-gries-dotcom/frontend/src/features/converter/ConverterPage.js"],"names":["React","useDispatch","useSelector","updateBinValue","updateDecValue","selectBinValue","selectDecValue","ConverterPage","dispatch","binValue","decValue","maxLength","length","handleInputUpdate","e","value","target","inputType","nativeEvent","i","num","charAt","alert","caluclateDecimalvalue","pos","bin","parseFloat","Math","pow","getAnswer","result","clearFields","preventDefault","handleSubmit"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  updateBinValue,\n  updateDecValue,\n  selectBinValue,\n  selectDecValue,\n} from \"./converterSlice\";\nimport \"./style.css\";\n\nexport const ConverterPage = () => {\n  const dispatch = useDispatch();\n  const binValue = useSelector(selectBinValue);\n  const decValue = useSelector(selectDecValue);\n\n  let maxLength = binValue.length === 8;\n\n  const handleInputUpdate = (e) => {\n    const { value } = e.target;\n    const { inputType } = e.nativeEvent;\n\n    if (!maxLength || inputType === \"deleteContentBackward\") {\n      for (let i = 0; i < value.length; i++) {\n        const num = value.charAt(i);\n        if (num !== \"0\" && num !== \"1\") {\n          alert(\"Enter 1 or 0\");\n          return;\n        }\n      }\n      dispatch(updateBinValue(value));\n    }\n  };\n\n  const caluclateDecimalvalue = (binValue, pos) => {\n    const bin = parseFloat(binValue);\n    return bin * Math.pow(2, pos);\n  };\n\n  const getAnswer = (binValue) => {\n    let result = 0;\n    for (let i = 0; i < binValue.length; i++) {\n      const pos = binValue.length - i - 1;\n      result += caluclateDecimalvalue(binValue.charAt(i), pos);\n    }\n    dispatch(updateDecValue(result));\n  };\n\n  const clearFields = (e) => {\n    e.preventDefault();\n    dispatch(updateBinValue(\"\"));\n    dispatch(updateDecValue(0));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    getAnswer(binValue);\n  };\n\n  return (\n    <section >\n      <h2>Convert Binary To Decimal</h2>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <input\n            autoFocus={true}\n            type=\"text\"\n            value={binValue}\n            onChange={handleInputUpdate}\n          />\n        </div>\n        <div>\n          <input type=\"text\" value={decValue} readOnly />\n        </div>\n        <div>\n          <button type=\"submit\">Convert</button>\n        </div>\n      </form>\n      <div>\n        <button type=\"submit\" onClick={clearFields}>\n          Clear\n        </button>\n      </div>\n    </section>\n  );\n};"]},"metadata":{},"sourceType":"module"}